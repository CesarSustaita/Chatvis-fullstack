[
  "\t",
  "\t    ",
  "\t      ",
  "\n",
  " ",
  "  ",
  "   ",
  "    ",
  "     ",
  "       ",
  "             ",
  "              ",
  "                 ",
  "                     ",
  "                        ",
  "                          ",
  " t\u00fa",
  " yo",
  " \u00e9l",
  "!",
  "\"",
  "\"%c",
  "\"%d",
  "\"%f",
  "\"%i",
  "\");break;}}while(opcion",
  "\");xxxx;}}xxxx(xxxx",
  "\",i",
  "\"El",
  "\"\\n",
  "\"dy",
  "\"el",
  "#",
  "$",
  "%",
  "&",
  "'",
  "''",
  "'-(",
  "'-)",
  "'No",
  "'no",
  "(",
  "(\"x",
  "(\"y",
  "(((",
  "(*>",
  "(*_*)",
  "(-8",
  "(-:",
  "(-;",
  "(-_-)",
  "(-d",
  "(._.)",
  "(:",
  "(;",
  "(=",
  "(>_<)",
  "([0",
  "(^_^)",
  "(o:",
  "(x:",
  "(x_x)",
  "(\u00ac_\u00ac)",
  "(\u0ca0_\u0ca0)",
  "(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35\u253b\u2501\u253b",
  ")",
  ")))",
  ")-:",
  ")/\u00af",
  "):",
  ")\\n",
  "*",
  "**/",
  "*No",
  "*no",
  "+",
  "+52",
  ",",
  "-",
  "-((",
  "-))",
  "---Opcion",
  "---Xxxxx",
  "---opcion",
  "---xxxx",
  "-/",
  "-0",
  "-16",
  "-3",
  "-8",
  "-90",
  "-D",
  "-O",
  "-P",
  "-X",
  "-_-",
  "-__-",
  "-d",
  "-dd",
  "-o",
  "-p",
  "-x",
  "-|",
  ".",
  "...",
  "....",
  ".....",
  ".0f",
  ".1",
  ".1f",
  ".1f\",resultado",
  ".1f\".resultado",
  ".2f",
  ".2s",
  ".35em",
  ".5f\\n",
  ".71em",
  ".A.",
  ".C.",
  ".D.",
  ".Event('hide.bs",
  ".L.",
  ".UU",
  ".Xxxxx('xxxx.xx",
  "._.",
  ".append(\"text\").attr(\"transform",
  ".append(\"textPath\").attr(\"startOffset\",\"50%\").attr(\"font-size",
  ".append(\"textpath\").attr(\"startoffset\",\"50%\").attr(\"font-size",
  ".attr(\"height",
  ".attr(\"transform",
  ".attr(\"width",
  ".attr(\"y",
  ".attr('title",
  ".bs",
  ".call(xAxis",
  ".call(xaxis",
  ".call(yAxis",
  ".call(yaxis",
  ".d",
  ".d.",
  ".ddxx",
  ".dx",
  ".dx\",xxxx",
  ".dx\".xxxx",
  ".dx\\x",
  ".ej",
  ".enter().append(\"g\").attr(\"class",
  ".enter().append(\"rect\").attr(\"width",
  ".event('hide.bs",
  ".format(e",
  ".m.",
  ".n.",
  ".org",
  ".s.",
  ".style(\"fill",
  ".style(\"text-anchor",
  ".support.transition",
  ".xxx",
  ".xxxx(\"x",
  ".xxxx(\"xxxx",
  ".xxxx(\"xxxx\").xxxx(\"xxxx",
  ".xxxx(\"xxxx\").xxxx(\"xxxx\",\"dd%\").xxxx(\"xxxx-xxxx",
  ".xxxx(\"xxxx-xxxx",
  ".xxxx(\"xxxxXxxx\").xxxx(\"xxxxXxxxx\",\"dd%\").xxxx(\"xxxx-xxxx",
  ".xxxx('xxxx",
  ".xxxx('xxxx.xx",
  ".xxxx().xxxx(\"x\").xxxx(\"xxxx",
  ".xxxx().xxxx(\"xxxx\").xxxx(\"xxxx",
  ".xxxx(x",
  ".xxxx(xXxxx",
  ".xxxx(xxxx",
  ".xxxx.xxxx",
  ".y0",
  ".y1",
  "/",
  "/**Bibliotecas**/",
  "/**Xxxxx**/",
  "/**bibliotecas**/",
  "/**xxxx**/",
  "/*1.-",
  "/*Bibliotecas*/#include",
  "/*Xxxxx*/#xxxx",
  "/*bibliotecas*/#include",
  "/*d.-",
  "/*outerArcs.append(\"text\").attr(\"class",
  "/*outerarcs.append(\"text\").attr(\"class",
  "/*xxxx*/#xxxx",
  "/*xxxx.xxxx(\"xxxx\").xxxx(\"xxxx",
  "/*xxxxXxxx.xxxx(\"xxxx\").xxxx(\"xxxx",
  "//Aqu\u00ed",
  "//C->n2",
  "//PROTOTIPO://void",
  "//X->xd",
  "//XXXX://xxxx",
  "//Xxxx",
  "//aqu\u00ed",
  "//c->n2",
  "//caso",
  "//prototipo://void",
  "//x->xd",
  "//xxxx",
  "//xxxx://xxxx",
  "/00",
  "/18",
  "/19",
  "/22",
  "/3",
  "/Bibliotecas/",
  "/Xxxxx/",
  "/bibliotecas/",
  "/body",
  "/d",
  "/form",
  "/h1",
  "/head",
  "/html",
  "/label",
  "/left|right/.test(placement",
  "/li",
  "/p",
  "/script>[10/09/22",
  "/top|bottom/.test(placement",
  "/ul",
  "/x",
  "/xx",
  "/xxxx",
  "/xxxx/",
  "/xxxx>[dd/dd/dd",
  "/xxxx|xxxx/.xxxx(xxxx",
  "/xxx|xxxx/.xxxx(xxxx",
  "0",
  "0){fact",
  "0){if(n",
  "0.0",
  "0.o",
  "00:00:00",
  "017",
  "018",
  "020",
  "036",
  "05\u202c",
  "06/09/22",
  "08072020_Primeras",
  "08072020_primeras",
  "08:00",
  "0;d.ages",
  "0;}[11/09/22",
  "0A\");NODO",
  "0_0",
  "0_o",
  "0a\");nodo",
  "0var",
  "1",
  "1);scanf(\"%d\",&arr_family[i].age_year);printf(\"Edad",
  "1);scanf(\"%d\",&arr_family[i].age_year);printf(\"edad",
  "1);scanf(\"%f\",&month);month",
  "1)Aritmetica",
  "1)aritmetica",
  "1)printf(\"\\n",
  "1){hanoi(N-1",
  "1){hanoi(n-1",
  "1.-",
  "10",
  "10:51:38",
  "10;printf(\"El",
  "10;printf(\"el",
  "10a.m",
  "10a.m.",
  "10p.m",
  "10p.m.",
  "11",
  "11/09/22",
  "1116",
  "1116\u202c",
  "116",
  "11:45:28",
  "11:49:23",
  "11:49:34",
  "11:49:44",
  "11:50:34",
  "11:52:05",
  "11:52:53",
  "11:53:59",
  "11:54:19",
  "11:54:29",
  "11:54:35",
  "11:54:42",
  "11:54:53",
  "11:54:54",
  "11:55:11",
  "11:55:20",
  "11:55:35",
  "11:57:57",
  "11a.m",
  "11a.m.",
  "11p.m",
  "11p.m.",
  "12",
  "12:07:59",
  "12:08:01",
  "12:13:37",
  "12:13:53",
  "12:18:39",
  "12a.m",
  "12a.m.",
  "12m.",
  "12p.m",
  "12p.m.",
  "12\u202c",
  "136",
  "13:58:34",
  "13:59:41",
  "13:59:47",
  "13:59:56",
  "1420\u202c",
  "14:00:07",
  "14:00:11",
  "14:00:55",
  "150",
  "15:07:02",
  "15:16:17",
  "15:16:35",
  "15:22:12",
  "15:22:19",
  "15:22:38",
  "15:22:59",
  "15:25:06",
  "15:25:15",
  "15:25:45",
  "15:25:59",
  "15:29:45",
  "15:29:52",
  "15:29:58",
  "15:30:18",
  "15:30:19",
  "15:30:46",
  "15:30:54",
  "15:32:14",
  "15:32:18",
  "15:32:20",
  "15:32:22",
  "15:32:53",
  "15:33:05",
  "15:33:45",
  "15:33:50",
  "15:35:49",
  "15:37:04",
  "15:37:27",
  "15:43:09",
  "15:43:52",
  "16",
  "16:03:32",
  "16:32:25",
  "16:34:11",
  "16:39:32",
  "16:39:46",
  "16:39:57",
  "16:39:59",
  "16:40:04",
  "16:40:13",
  "16:40:19",
  "16:57:48",
  "16\u202c",
  "17:22:36",
  "17:22:53",
  "17:27:05",
  "17:28:23",
  "17:35:37",
  "17:40:15",
  "17:40:20",
  "17:41:19",
  "17:41:22",
  "17:41:53",
  "18",
  "18).attr(\"height",
  "180",
  "1900;[11/09/22",
  "193",
  "1://Funci\u00f3n",
  "1://Prisma",
  "1://Rect\u00e1ngulobreak;case",
  "1://Sumabreak;case",
  "1://funci\u00f3n",
  "1://prisma",
  "1://rect\u00e1ngulobreak;case",
  "1://sumabreak;case",
  "1;break;case",
  "1;fecha1.anio",
  "1;if",
  "1;}return",
  "1].y1",
  "1a.m",
  "1a.m.",
  "1em",
  "1p.m",
  "1p.m.",
  "2",
  "2.-",
  "20",
  "2017",
  "2018",
  "2020",
  "2021Geograf\u00eda",
  "2021geograf\u00eda",
  "2022------------------|\");printf(\"\\n",
  "2022-oton\u0303o.pdf",
  "20\u202c",
  "212",
  "21:08:43",
  "21:08:49",
  "21:09:18",
  "21:09:27",
  "21:09:37",
  "21:12:56",
  "21:13:03",
  "21:13:26",
  "21:13:39",
  "21:37:29",
  "21:40:31",
  "21:40:38",
  "21:40:42",
  "21:40:53",
  "21:40:54",
  "21:41:01",
  "21:41:09",
  "21:43:40",
  "21:43:57",
  "21:45:29",
  "21:49:43",
  "21:50:12",
  "221",
  "228",
  "22:00:39",
  "22:01:30",
  "22:01:36",
  "22:01:40",
  "22:01:55",
  "22:02:11",
  "22:02:25",
  "22:03:13",
  "2391\u202c",
  "24",
  "25",
  "270*Math",
  "270*math",
  "285",
  "2885",
  "2885\u202c",
  "2://Cilindrobreak;case",
  "2://Funci\u00f3n",
  "2://Restabreak;case",
  "2://Tri\u00e1ngulobreak;case",
  "2://cilindrobreak;case",
  "2://funci\u00f3n",
  "2://restabreak;case",
  "2://tri\u00e1ngulobreak;case",
  "2:29:25",
  "2;break;case",
  "2D",
  "2a.m",
  "2a.m.",
  "2d",
  "2m.",
  "2p.m",
  "2p.m.",
  "3",
  "3);return",
  "3.-",
  "3.141592654",
  "3.141592654/*Estructura",
  "3.141592654/*estructura",
  "30",
  "33",
  "333",
  "365",
  "374",
  "380",
  "3://C\u00edrculobreak;}break;case",
  "3://C\u00edrculobreak;}case",
  "3://Funci\u00f3n",
  "3://Multiplicaci\u00f3nbreak;case",
  "3://Pir\u00e1mide",
  "3://c\u00edrculobreak;}break;case",
  "3://c\u00edrculobreak;}case",
  "3://funci\u00f3n",
  "3://multiplicaci\u00f3nbreak;case",
  "3://pir\u00e1mide",
  "3:49:59",
  "3;break;}break;case",
  "3;break;}case",
  "3D",
  "3a.m",
  "3a.m.",
  "3d",
  "3p.m",
  "3p.m.",
  "4",
  "4);return",
  "4.-",
  "40},width",
  "420",
  "43c",
  "444",
  "4://Divisi\u00f3nbreak;}break;case",
  "4://Divisi\u00f3nbreak;}case",
  "4://divisi\u00f3nbreak;}break;case",
  "4://divisi\u00f3nbreak;}case",
  "4a.m",
  "4a.m.",
  "4p.m",
  "4p.m.",
  "5",
  "5);return",
  "5.-",
  "50",
  "500",
  "5251\u202c[07/09/22",
  "537",
  "5474\u202c",
  "5a.m",
  "5a.m.",
  "5em",
  "5p.m",
  "5p.m.",
  "6",
  "6).attr(\"dy",
  "6.-",
  "6505\u202c",
  "654",
  "6a.m",
  "6a.m.",
  "6b486b",
  "6p.m",
  "6p.m.",
  "7",
  "7);return",
  "7.-",
  "718",
  "74\u202c",
  "7a.m",
  "7a.m.",
  "7b6888",
  "7p.m",
  "7p.m.",
  "8",
  "8)",
  "8);liberaLista(&cab);return",
  "8);liberalista(&cab);return",
  "8);return",
  "8-",
  "8-)",
  "8-D",
  "8-d",
  "8.-",
  "85\u202c",
  "86b",
  "885",
  "887",
  "888",
  "8D",
  "8a.m",
  "8a.m.",
  "8a89a6",
  "8d",
  "8p.m",
  "8p.m.",
  "9",
  "9).attr(\"dy",
  "9);return",
  "9.-",
  "90*Math",
  "90*math",
  "91\u202c",
  "9212",
  "9212\u202c",
  "960",
  "9:16:52",
  "9:18:46",
  "9a.m",
  "9a.m.",
  "9a6",
  "9p.m",
  "9p.m.",
  ":",
  ":'(",
  ":')",
  ":'-(",
  ":'-)",
  ":(",
  ":((",
  ":(((",
  ":()",
  ":)",
  ":))",
  ":)))",
  ":*",
  ":-(",
  ":-((",
  ":-(((",
  ":-)",
  ":-))",
  ":-)))",
  ":-*",
  ":-/",
  ":-0",
  ":-3",
  ":->",
  ":-D",
  ":-O",
  ":-P",
  ":-X",
  ":-]",
  ":-d",
  ":-o",
  ":-p",
  ":-x",
  ":-|",
  ":-}",
  ":/",
  ":0",
  ":00",
  ":01",
  ":02",
  ":03",
  ":04",
  ":05",
  ":06",
  ":07",
  ":09",
  ":1",
  ":11",
  ":12",
  ":13",
  ":14",
  ":15",
  ":17",
  ":18",
  ":19",
  ":20",
  ":22",
  ":23",
  ":25",
  ":26",
  ":27",
  ":28",
  ":29",
  ":3",
  ":30",
  ":31",
  ":32",
  ":34",
  ":35",
  ":36",
  ":37",
  ":38",
  ":39",
  ":40",
  ":41",
  ":42",
  ":43",
  ":44",
  ":45",
  ":46",
  ":47",
  ":48",
  ":49",
  ":50",
  ":52",
  ":53",
  ":54",
  ":55",
  ":56",
  ":57",
  ":58",
  ":59",
  ":>",
  ":D",
  ":O",
  ":P",
  ":X",
  ":]",
  ":d",
  ":o",
  ":o)",
  ":p",
  ":pv",
  ":x",
  ":x)",
  ":|",
  ":}",
  ":\u2019(",
  ":\u2019)",
  ":\u2019-(",
  ":\u2019-)",
  ";",
  ";)",
  ";-)",
  ";-D",
  ";-X",
  ";-d",
  ";D",
  ";X",
  ";_;",
  ";d",
  ";if",
  "<",
  "<.<",
  "</3",
  "</d",
  "<3",
  "<33",
  "<333",
  "<d",
  "<dd",
  "<ddd",
  "<space>",
  "<xxxx>",
  "=",
  "=(",
  "=)",
  "=/",
  "=3",
  "==0",
  "=D",
  "=X",
  "=[",
  "=]",
  "=d",
  "=ir",
  "=xx",
  "=|",
  ">",
  ">.<",
  ">.>",
  ">:(",
  ">:o",
  ">:x",
  "><(((*>",
  ">n1",
  ">n2",
  ">n3",
  ">n4",
  "?",
  "@",
  "@5214441190036",
  "@5214441366505\u2022*c",
  "@5214441932391\u2022*g",
  "@5214442145259\u2022*e",
  "@5214442859212\u2022*d",
  "@5214443163254\u2022*f",
  "@5214443741420",
  "@5214443802885",
  "@5214445027537",
  "@5214447185474\u2022*a",
  "@5214448875251[10/09/22",
  "@5214871594881\u2022*b",
  "@_@",
  "@app.route('/')def",
  "@app.route('/hello-world')def",
  "@app.route('/messages",
  "@dddd",
  "@dddd[dd/dd/dd",
  "@dddd\u2022*x",
  "@nombre2Hola",
  "@nombre2hola",
  "@xx",
  "@xxx.xxxx('/')xxx",
  "@xxx.xxxx('/xxxx",
  "@xxx.xxxx('/xxxx-xxxx')xxx",
  "@xxxxdXxxx",
  "@xxxxdxxxx",
  "@yo",
  "A",
  "ACE",
  "ADO",
  "AIH",
  "AIT",
  "AJA",
  "AJO",
  "ALA",
  "AM",
  "AMA",
  "AMEXCOMP",
  "AMLO.NOTA",
  "ANT",
  "ARA",
  "ART",
  "Abarca",
  "Abrazos",
  "Acaba",
  "Acu\u00e9rdense",
  "Ac\u00e1",
  "Adem\u00e1s",
  "AdvType",
  "AdvType=Tim",
  "Agregue",
  "Aguanten",
  "Ah",
  "Ahora",
  "Ahorita",
  "Ai",
  "Aj\u00e1",
  "Al",
  "Alan",
  "Alberto",
  "Alfredo",
  "Alfredo[07/09/22",
  "Alguien",
  "Anah\u00ed",
  "Andrea",
  "Andr\u00e9s[07/09/22",
  "Antonio",
  "App",
  "Aprov\u00e9chalo",
  "Aritmetica",
  "Aritm\u00e9tica:\\n\");switch(menuAritmetica()){case",
  "Aritm\u00e9tica\\n",
  "Art",
  "Artes",
  "As\u00ed",
  "Aunque",
  "Av",
  "Av.",
  "Avda",
  "Avda.",
  "Avdd[06/09/22",
  "Aver",
  "B",
  "BISIESTO",
  "BISIESTO\");break;case",
  "Barajas",
  "Bisiesto",
  "Bonaventuriana",
  "Book",
  "Bozzo",
  "Brendita",
  "Brendiux",
  "Buen",
  "Buenas",
  "Bueno",
  "Buenos",
  "Buscar",
  "B\u00e1rbara",
  "B\u00e1sicamente",
  "C",
  "C){int",
  "C){printf(\"\\nIngresa",
  "C){printf(\"\\nIngrese",
  "C++",
  "C->n1",
  "C->n1);switch(op){case",
  "C->n1*C->n2;printf(\"\\nLa",
  "C->n2);break;default",
  "C->n4",
  "C->res",
  "C->res);}float",
  "C.",
  "CHA",
  "CONSTANT",
  "CVU-SNI",
  "Campos",
  "Carlos",
  "Carmen",
  "Case",
  "Case=Acc",
  "Case=Acc,Nom|Gender=Masc|Number=Plur|Person=1|PronType=Prs",
  "Case=Acc,Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs",
  "Case=Acc|Definite=Def|Gender=Masc|Number=Sing|Person=3|PrepCase=Npr|PronType=Prs",
  "Case=Acc|Gender=Fem|Number=Plur|Person=3|PrepCase=Npr|PronType=Prs",
  "Case=Acc|Gender=Fem|Number=Plur|Person=3|PrepCase=Npr|PronType=Prs|VerbForm=Ger",
  "Case=Acc|Gender=Fem|Number=Plur|Person=3|PrepCase=Npr|PronType=Prs|VerbForm=Inf",
  "Case=Acc|Gender=Fem|Number=Sing|Person=3|PrepCase=Npr|PronType=Prs",
  "Case=Acc|Gender=Masc|Number=Plur|Person=3|PrepCase=Npr|PronType=Prs",
  "Case=Acc|Gender=Masc|Number=Plur|Person=3|PrepCase=Npr|PronType=Prs|VerbForm=Inf",
  "Case=Acc|Gender=Masc|Number=Sing|Person=3|PrepCase=Npr|PronType=Prs",
  "Case=Acc|Gender=Masc|Number=Sing|Person=3|PrepCase=Npr|PronType=Prs|VerbForm=Inf",
  "Case=Acc|Mood=Imp|Number=Plur|Person=3|PrepCase=Npr|PronType=Prs|Reflex=Yes|VerbForm=Fin",
  "Case=Acc|Mood=Imp|Number=Sing|Person=2|PrepCase=Npr|PronType=Prs|Reflex=Yes|VerbForm=Fin",
  "Case=Acc|Number=Plur|Person=1|PrepCase=Npr|PronType=Prs",
  "Case=Acc|Number=Plur|Person=1|PrepCase=Npr|PronType=Prs|Reflex=Yes",
  "Case=Acc|Number=Sing|Person=1|PrepCase=Pre|PronType=Prs",
  "Case=Acc|Number=Sing|Person=2|PrepCase=Npr|PronType=Prs",
  "Case=Acc|Number=Sing|Person=2|PrepCase=Pre|PronType=Prs",
  "Case=Acc|Person=3|PrepCase=Npr|PronType=Prs",
  "Case=Acc|Person=3|PrepCase=Npr|PronType=Prs|Reflex=Yes",
  "Case=Dat",
  "Case=Dat|Number=Plur|Person=1|PrepCase=Npr|PronType=Prs",
  "Case=Dat|Number=Plur|Person=1|PrepCase=Npr|PronType=Prs|Reflex=Yes",
  "Case=Dat|Number=Plur|Person=1|PrepCase=Npr|PronType=Prs|VerbForm=Ger",
  "Case=Dat|Number=Plur|Person=3|PronType=Prs",
  "Case=Dat|Number=Sing|Person=1|PrepCase=Npr|PronType=Prs",
  "Case=Dat|Number=Sing|Person=1|PrepCase=Npr|PronType=Prs|Reflex=Yes",
  "Case=Dat|Number=Sing|Person=2|PrepCase=Npr|PronType=Prs",
  "Case=Dat|Number=Sing|Person=2|PrepCase=Npr|PronType=Prs|Reflex=Yes",
  "Case=Dat|Number=Sing|Person=2|PrepCase=Npr|PronType=Prs|VerbForm=Inf",
  "Case=Dat|Number=Sing|Person=3|PronType=Prs",
  "Case=Dat|Number=Sing|Person=3|PronType=Prs|VerbForm=Inf",
  "Case=Dat|Person=3|PrepCase=Npr|PronType=Prs",
  "Case=Dat|Person=3|PrepCase=Npr|PronType=Prs|Reflex=Yes",
  "Case=Nom",
  "Case=Nom|Number=Sing|Person=1|PronType=Prs",
  "Cerda",
  "Chabelo\"",
  "Chapters",
  "Checa",
  "Chequen",
  "Chicos",
  "Chin",
  "Ciclo",
  "Cilindro\\n",
  "Civismo",
  "Clases",
  "Classify</h1",
  "Classify</title",
  "Cmp",
  "Cocina",
  "Codigo",
  "Colombia",
  "Comentarios_\u2022Todas",
  "Como",
  "Con",
  "Conacyt",
  "Conde",
  "Conisoft",
  "Conozco",
  "Convenciones",
  "Conventions",
  "Convocatoria",
  "Copiando",
  "Coque",
  "Creaste",
  "Creo",
  "Cuando",
  "Cuenta",
  "Cu\u00e1l",
  "C\u00e1rcamo",
  "C\u00eda",
  "C\u00eda.",
  "C\u00edrculo\\n",
  "C\u00f3mo",
  "D",
  "DEL",
  "DES",
  "DEZ",
  "DIAS",
  "Dato",
  "De",
  "Definite",
  "Definite=Def",
  "Definite=Def|Gender=Fem|Number=Plur|PronType=Art",
  "Definite=Def|Gender=Fem|Number=Sing|PronType=Art",
  "Definite=Def|Gender=Masc|Number=Plur|PronType=Art",
  "Definite=Def|Gender=Masc|Number=Sing|PronType=Art",
  "Definite=Ind",
  "Definite=Ind|Gender=Fem|Number=Sing|PronType=Art",
  "Definite=Ind|Gender=Masc|Number=Plur|PronType=Art",
  "Definite=Ind|Gender=Masc|Number=Sing|PronType=Art",
  "Degree",
  "Degree=Cmp",
  "Degree=Cmp|Number=Plur",
  "Degree=Cmp|Number=Sing",
  "Deja",
  "Dejen",
  "Delgado",
  "Dem",
  "Denle",
  "Descanse",
  "DiasTranscurridos(fecha1);[11/09/22",
  "DiasTranscurridos(fecha2);for(numanios",
  "Dios",
  "Diosito",
  "Display*/void",
  "Distancia",
  "Divisi\u00f3n",
  "Divisi\u00f3n\\n",
  "Doce",
  "Dr",
  "Dr.",
  "Dra",
  "Dra.",
  "D\u00edas",
  "D\u00f3riga",
  "E",
  "ED2",
  "EDADES",
  "EDADES\");break;case",
  "EE",
  "EE. UU.",
  "EE.UU",
  "EE.UU.",
  "EJO",
  "ELABORADO",
  "EN",
  "ENLAZADAS-----------------|\");printf(\"\\n",
  "EQUIPO",
  "ERB",
  "ESCALA",
  "ESTADISTICA",
  "ESTADISTICA\");break;case",
  "EXISTE\");}}while(opcion",
  "Econom\u00eda",
  "Edades",
  "Educaci\u00f3n",
  "Ee",
  "Ee. Uu.",
  "Ee.Uu.",
  "Efectiva",
  "Ei\u200e[06/09/22",
  "Ejemplo",
  "El",
  "Elige",
  "Elimina",
  "Eliminar",
  "Eliminar\");printf(\"\\n",
  "Eliminaste",
  "Emma",
  "Emmanuel\\n",
  "Empiezo",
  "En",
  "Entonces",
  "Equipo",
  "Es",
  "Ese",
  "Espero",
  "Esta",
  "Estad\u00edsitica:\\n\");//Estad\u00edsticabreak;case",
  "Estad\u00edstica",
  "Estad\u00edstica\\n",
  "Este",
  "Estimados",
  "Esto",
  "Estoy",
  "Estuve",
  "Excelente",
  "Exception",
  "Exitoso",
  "F",
  "F\",C->n3",
  "F.",
  "FACTORAIL\");break;case",
  "FACTORIAL",
  "FECHA",
  "FECHA\");break;case",
  "FESTEJO",
  "FGR.pdf",
  "FORMULAS",
  "FOTOS",
  "Factorial",
  "Factorial:\\n\");//Factorialbreak;case",
  "Factorial\\n",
  "Falta",
  "Faltaba",
  "Felicidades",
  "Feliz",
  "Fernando",
  "Filosof\u00eda",
  "Fin",
  "Final",
  "Final\");eliminaFinalRec(&cab);break;case",
  "Final\");printf(\"\\n",
  "Fuerza:\\n\");//Fuerzabreak",
  "Fuerza:\\n\");//Fuerzabreak;}fflush(stdin);printf(\"\\n\\n\u00bfDesea",
  "Fuerza\\n",
  "F\u00edsica",
  "G",
  "GAR",
  "GPI[15/09/22",
  "Galilea",
  "Gallegos",
  "Garc\u00eda",
  "Gender",
  "Gender=Fem",
  "Gender=Fem|NumType=Card|Number=Plur",
  "Gender=Fem|NumType=Card|Number=Plur|PronType=Ind",
  "Gender=Fem|NumType=Ord|Number=Sing",
  "Gender=Fem|Number=Plur",
  "Gender=Fem|Number=Plur|PronType=Dem",
  "Gender=Fem|Number=Plur|PronType=Ind",
  "Gender=Fem|Number=Plur|PronType=Tot",
  "Gender=Fem|Number=Plur|VerbForm=Part",
  "Gender=Fem|Number=Sing",
  "Gender=Fem|Number=Sing|Number[psor]=Plur|Person=1|Poss=Yes|PronType=Prs",
  "Gender=Fem|Number=Sing|PronType=Dem",
  "Gender=Fem|Number=Sing|PronType=Ind",
  "Gender=Fem|Number=Sing|Tense=Past|VerbForm=Part",
  "Gender=Fem|Number=Sing|VerbForm=Part",
  "Gender=Masc",
  "Gender=Masc|NumType=Card|Number=Plur|PronType=Int,Rel",
  "Gender=Masc|NumType=Card|Number=Sing|PronType=Ind",
  "Gender=Masc|NumType=Card|Number=Sing|PronType=Int,Rel",
  "Gender=Masc|NumType=Ord|Number=Sing",
  "Gender=Masc|Number=Plur",
  "Gender=Masc|Number=Plur|Number[psor]=Plur|Person=1|Poss=Yes|PronType=Prs",
  "Gender=Masc|Number=Plur|PronType=Dem",
  "Gender=Masc|Number=Plur|PronType=Ind",
  "Gender=Masc|Number=Plur|PronType=Tot",
  "Gender=Masc|Number=Plur|Tense=Past|VerbForm=Part",
  "Gender=Masc|Number=Plur|VerbForm=Part",
  "Gender=Masc|Number=Sing",
  "Gender=Masc|Number=Sing|Number[psor]=Plur|Person=1|Poss=Yes|PronType=Prs",
  "Gender=Masc|Number=Sing|PronType=Dem",
  "Gender=Masc|Number=Sing|PronType=Ind",
  "Gender=Masc|Number=Sing|PronType=Neg",
  "Gender=Masc|Number=Sing|PronType=Tot",
  "Gender=Masc|Number=Sing|Tense=Past|VerbForm=Part",
  "Gender=Masc|Number=Sing|VerbForm=Part",
  "Genial",
  "Geometr\u00eda",
  "Ger",
  "Gerardo",
  "Gerardo\\n\");printf",
  "Gloria",
  "Gob",
  "Gob.",
  "Gonz\u00e1lez",
  "Gracias",
  "Gracias[12/09/22",
  "Gral",
  "Gral.",
  "Guard\u00eda",
  "Guerrero",
  "Guti\u00e9rrez",
  "H",
  "HERNANDEZ",
  "Hanna",
  "Hay",
  "Hector",
  "Hermanos",
  "Hern\u00e1ndez",
  "Himno",
  "Historia",
  "Hola",
  "Hola[06/09/22",
  "Hora",
  "I",
  "IAL",
  "IAS",
  "ICA",
  "II",
  "ION",
  "IPO",
  "IS",
  "ISAIH",
  "Ignacio[07/09/22",
  "Igualmente",
  "Inc",
  "Ind",
  "Inf",
  "Ing",
  "Ing.",
  "Ingl\u00e9s",
  "Ingl\u00e9s.\u2022Nombres",
  "Ingresa",
  "Ingrese",
  "Inicio",
  "Inicio\");eliminaInicio(&cab);break;case",
  "Insercion",
  "Insertar",
  "Intent\u00e9",
  "Intrascendente",
  "Iphone",
  "IsaGamesInc",
  "Isaih",
  "Isa\u00ed",
  "J",
  "J.C.",
  "JAJA",
  "JAJAJA",
  "JCR",
  "Jaime",
  "Jajaja",
  "Javier",
  "Joe",
  "Jorge",
  "Josafat",
  "Juarez",
  "Jueves",
  "Juriel[07/09/22",
  "K",
  "K.",
  "Karla",
  "Kevin",
  "Kevin[07/09/22",
  "L",
  "LAS",
  "LES",
  "LIR",
  "LLEGAR",
  "La",
  "Las",
  "Laura",
  "Le",
  "Lee",
  "Legarreta",
  "Les",
  "Lic",
  "Lic.",
  "Lista",
  "Listo[12/09/22",
  "Lo",
  "Logistica",
  "Los",
  "Luis",
  "Lupitina",
  "L\u00f3pez",
  "M",
  "MIS",
  "Maribel",
  "Maritere",
  "Marquez",
  "Mart\u00ednez",
  "Mar\u00ednes",
  "Matem\u00e1ticas",
  "Maussan",
  "Ma\u00f1ana",
  "Me",
  "Mensajes*\u2022Incluir",
  "Messages",
  "Messages</h1",
  "Messages</title",
  "Mientras",
  "Mikel",
  "Mira",
  "Miren",
  "Miren[10/09/22",
  "Mirka",
  "Mi\u00e9rcoles",
  "Mm",
  "Mmm",
  "Monsiv\u00e1is",
  "Montijo",
  "Montse",
  "Montserrat",
  "Mood",
  "Mood=Cnd",
  "Mood=Cnd|Number=Plur|Person=1|VerbForm=Fin",
  "Mood=Cnd|Number=Plur|Person=3|VerbForm=Fin",
  "Mood=Cnd|Number=Sing|Person=3|VerbForm=Fin",
  "Mood=Imp",
  "Mood=Imp|Number=Plur|Person=1|VerbForm=Fin",
  "Mood=Imp|Number=Plur|Person=3|VerbForm=Fin",
  "Mood=Imp|Number=Sing|Person=2|VerbForm=Fin",
  "Mood=Imp|Number=Sing|Person=3|VerbForm=Fin",
  "Mood=Ind",
  "Mood=Ind|Number=Plur|Person=1|Tense=Fut|VerbForm=Fin",
  "Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin",
  "Mood=Ind|Number=Plur|Person=3|Tense=Fut|VerbForm=Fin",
  "Mood=Ind|Number=Plur|Person=3|Tense=Imp|VerbForm=Fin",
  "Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin",
  "Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin",
  "Mood=Ind|Number=Sing|Person=1|Tense=Past|VerbForm=Fin",
  "Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin",
  "Mood=Ind|Number=Sing|Person=2|Tense=Fut|VerbForm=Fin",
  "Mood=Ind|Number=Sing|Person=2|Tense=Past|VerbForm=Fin",
  "Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin",
  "Mood=Ind|Number=Sing|Person=3|Tense=Fut|VerbForm=Fin",
  "Mood=Ind|Number=Sing|Person=3|Tense=Imp|VerbForm=Fin",
  "Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin",
  "Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin",
  "Mood=Sub",
  "Mood=Sub|Number=Plur|Person=1|Tense=Imp|VerbForm=Fin",
  "Mood=Sub|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin",
  "Mood=Sub|Number=Plur|Person=3|Tense=Imp|VerbForm=Fin",
  "Mood=Sub|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin",
  "Mood=Sub|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin",
  "Mood=Sub|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin",
  "Mood=Sub|Number=Sing|Person=3|Tense=Imp|VerbForm=Fin",
  "Mood=Sub|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin",
  "Moreno",
  "Mostrar",
  "Muchas",
  "Mucho",
  "Multiplicaci\u00f3n\");printf(\"\\n",
  "Multiplicaci\u00f3n\\n",
  "Muy",
  "Mu\u00f1iz",
  "Mu\u00f1oz",
  "Myrka",
  "M\u00e1rquez",
  "M\u00e1rquez[06/09/22",
  "M\u00e9rida",
  "M\u00e9rida\u200e[06/01/18",
  "M\u00e9xicoHanna",
  "N",
  "N-1",
  "NCT",
  "NES",
  "NO",
  "NTJ",
  "NULL",
  "N]:\"\u00b7Escala",
  "Nacional",
  "Nadie",
  "Names.length<99?Names[i]:i+1",
  "Names;var",
  "Necesito",
  "Neg",
  "Nieto",
  "Niurka",
  "No",
  "Nombre",
  "NumForm",
  "NumForm=Digit",
  "NumForm=Digit|NumType=Card",
  "NumForm=Digit|NumType=Frac",
  "NumType",
  "NumType=Card",
  "NumType=Card|Number=Plur",
  "NumType=Frac",
  "NumType=Ord",
  "Number",
  "Number=Plur",
  "Number=Plur|Number[psor]=Sing|Person=1|Poss=Yes|PronType=Prs",
  "Number=Plur|Number[psor]=Sing|Person=2|Poss=Yes|PronType=Prs",
  "Number=Plur|Person=3|Poss=Yes|PronType=Prs",
  "Number=Plur|PronType=Ind",
  "Number=Sing",
  "Number=Sing|Number[psor]=Sing|Person=1|Poss=Yes|PronType=Prs",
  "Number=Sing|Number[psor]=Sing|Person=2|Poss=Yes|PronType=Prs",
  "Number=Sing|Person=3|Poss=Yes|PronType=Prs",
  "Number=Sing|PronType=Dem",
  "Number=Sing|PronType=Ind",
  "Number=Sing|PronType=Int,Rel",
  "Number=Sing|PronType=Neg",
  "Number=Sing|PronType=Tot",
  "Number[psor]",
  "Number[psor]=Plur",
  "Number[psor]=Sing",
  "N\u00ednel",
  "O",
  "O.O",
  "O.o",
  "ODO",
  "OMP",
  "ONJ",
  "OOT",
  "OPN",
  "OTA",
  "OUN",
  "O_O",
  "O_o",
  "Oaxaca",
  "Obed",
  "Obviamente",
  "Oh",
  "Ohhhh",
  "Oigan",
  "Ojeda",
  "Ok",
  "Okey",
  "Okok",
  "Ola[07/09/22",
  "Oratoria",
  "Ordenada\");printf(\"\\n",
  "Ordenado",
  "Othon",
  "Oye",
  "P",
  "P.D.",
  "PARA",
  "PI/180",
  "PM",
  "POR",
  "PREPARATIVOS",
  "Panini",
  "Para",
  "Parece",
  "Pensamiento",
  "Perfecto",
  "Pero",
  "Person",
  "Person=1",
  "Person=2",
  "Person=3",
  "Person=3|PrepCase=Npr|PronType=Prs|Reflex=Yes",
  "Per\u00edmetro):\\n\");switch(menuGeo2DPeri()){case",
  "Pe\u00f1a",
  "Pir\u00e1mide",
  "Planas",
  "Podemos",
  "Podr\u00eda",
  "Podr\u00edamos",
  "Polarity",
  "Polarity=Neg",
  "Polite",
  "Polite=Form",
  "Pongan",
  "Por",
  "Poss",
  "Poss=Yes",
  "PrepCase",
  "PrepCase=Npr",
  "PrepCase=Pre",
  "Primero",
  "Primo",
  "Prisma",
  "Prof",
  "Prof.",
  "Profa",
  "Profa.",
  "Progreso",
  "PronType",
  "PronType=Art",
  "PronType=Dem",
  "PronType=Ind",
  "PronType=Int",
  "PronType=Int,Rel",
  "PronType=Neg",
  "PronType=Prs",
  "PronType=Rel",
  "PronType=Tot",
  "Propongo",
  "Prs",
  "Puebla",
  "Pues",
  "PunctSide",
  "PunctSide=Fin",
  "PunctSide=Fin|PunctType=Brck",
  "PunctSide=Fin|PunctType=Excl",
  "PunctSide=Fin|PunctType=Qest",
  "PunctSide=Ini",
  "PunctSide=Ini|PunctType=Brck",
  "PunctSide=Ini|PunctType=Excl",
  "PunctSide=Ini|PunctType=Qest",
  "PunctType",
  "PunctType=Brck",
  "PunctType=Colo",
  "PunctType=Comm",
  "PunctType=Dash",
  "PunctType=Excl",
  "PunctType=Peri",
  "PunctType=Qest",
  "PunctType=Quot",
  "PunctType=Semi",
  "Q",
  "Q.E.P.D.",
  "Que",
  "Queremos",
  "Quien",
  "Quirrr",
  "Qui\u00e9n",
  "Qu\u00e9",
  "R",
  "REDMIS",
  "RIA",
  "RON",
  "ROOT",
  "Raul",
  "Raul[07/09/22",
  "Ra\u00fal",
  "Rectangularbreak;case",
  "Rect\u00e1ngulo\\n",
  "Reflex",
  "Reflex=Yes",
  "Regil",
  "Rel",
  "Resta",
  "Resta\\n",
  "Reyes",
  "Roberto[07/09/22",
  "Rodriguez",
  "Rogelio",
  "Rojas",
  "Rosma",
  "S",
  "S.A.",
  "S.L.",
  "S.R.L.",
  "SALIR",
  "SIMPLES",
  "SIS",
  "SNI",
  "SSale",
  "STO",
  "SUBO",
  "Salazar",
  "Salinas",
  "Salir",
  "Saludo",
  "Saludos",
  "Se",
  "Seg\u00fan",
  "Sergio",
  "Ser\u00e1",
  "Ser\u00e1n",
  "Ser\u00eda",
  "Sexual",
  "Shottle",
  "Si",
  "Sigo",
  "Sin",
  "Sip",
  "Sisi",
  "Sisis",
  "Sisisi",
  "Si\u200e[07/09/22",
  "Smn",
  "Solo",
  "Son",
  "Sr",
  "Sr.",
  "Sra",
  "Sra.",
  "Srta",
  "Srta.",
  "State",
  "Suma",
  "Suma\\n",
  "T",
  "TAS",
  "TECNICA",
  "TEMPERATURA",
  "TEMPERATURA\");break;case",
  "TOS",
  "TRABAJO",
  "TRIGONOMETRIA",
  "TRIGONOMETRIA\");break;case",
  "Tambi\u00e9n",
  "Tarea",
  "Tarea-2-REQUERIMIENTOS",
  "Tareas*\u2022*Main",
  "Te",
  "Televisa",
  "Temperatura",
  "Tendr\u00eda",
  "Tense",
  "Tense=Fut",
  "Tense=Imp",
  "Tense=Past",
  "Tense=Pres",
  "Thks",
  "Tim",
  "Todo",
  "Tooltip.prototype.setContent",
  "Tot",
  "Toy",
  "Transmitir\u00e1",
  "Trevi",
  "Trigonometr\u00eda",
  "Trigonometr\u00eda:\\n\");switch(menuTrigonometria()){case",
  "Trigonometr\u00eda\\n",
  "Triste",
  "Tri\u00e1ngulo\\n",
  "Trujillo",
  "U",
  "UBO",
  "ULL",
  "UNA",
  "URA",
  "UU",
  "UU.",
  "Ud",
  "Ud.",
  "Uds",
  "Uds.",
  "Ulanova",
  "Un",
  "Una",
  "Universal",
  "Uu",
  "Uu.",
  "Uxmal",
  "V",
  "V.V",
  "VIERNES",
  "VOS",
  "V_V",
  "Va",
  "Va12/09/22",
  "Varsovia",
  "Vayan",
  "Vd",
  "Vd.",
  "Vds",
  "Vds.",
  "Velocidad:\\n\");//Velocidadbreak;case",
  "Velocidad\\n",
  "VerbForm",
  "VerbForm=Fin",
  "VerbForm=Ger",
  "VerbForm=Inf",
  "VerbForm=Part",
  "Villase\u00f1or",
  "Vocacional",
  "Volumen):\\n\");switch(menuGeo3D()){case",
  "W",
  "WAIT",
  "Web",
  "WhatsApp",
  "Wow",
  "X\",X->xd",
  "X){xxx",
  "X){xxxx(\"\\xXxxxx",
  "X++",
  "X->xd",
  "X->xd);xxxx(xx){xxxx",
  "X->xd);xxxx;xxxx",
  "X->xd*X->xd;xxxx(\"\\xXx",
  "X->xxx",
  "X->xxx);}xxxx",
  "X.",
  "X.X",
  "X.X.",
  "X.X.X.",
  "X.X.X.X.",
  "X.x",
  "XD",
  "XDD",
  "XX",
  "XX. XX.",
  "XX.XX",
  "XX.XX.",
  "XX/ddd",
  "XXX",
  "XXX-XXX",
  "XXX.xxx",
  "XXXX",
  "XXXX\");xxxx;xxxx",
  "XXXX\");}}xxxx(xxxx",
  "XXXX----|\");xxxx(\"\\x",
  "XXXX.XXXX",
  "XXX[dd/dd/dd",
  "XXd",
  "XXxxx",
  "X]:\"\u00b7Xxxxx",
  "X_X",
  "X_x",
  "Xd[06/09/22",
  "Ximena[07/09/22",
  "Xx",
  "Xx.",
  "Xx. Xx.",
  "Xx.Xx.",
  "Xx[dd/dd/dd",
  "Xxdd/dd/dd",
  "Xxx",
  "Xxx.",
  "XxxXxxx=Xxx",
  "XxxXxxx=Xxxxx",
  "XxxXxxx=Xxxxx|XxxXxxx=Xxxx",
  "XxxXxxx=Xxxx|Xxxxx=Xxxx",
  "XxxXxxxxXxx",
  "Xxx[dd/dd/dd",
  "Xxxx",
  "Xxxx):\\x\");xxxx(xxxxXxxdXXxxx()){xxxx",
  "Xxxx.",
  "Xxxx=Xxx,Xxx|Xxxxx=Xxxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx",
  "Xxxx=Xxx,Xxx|Xxxxx=Xxxx|Xxxxx=d|Xxxxx=Xxxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxx=Xxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx|Xxxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx|Xxxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxxx|Xxxxx=d|Xxxxx=Xxxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxxx|Xxxxx=d|Xxxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxx|Xxxxx=Xxxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=Xxx|Xxxxx=Xxxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxx=Xxx|Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx|Xxxxx=Xxx",
  "XxxxXxxx=Xxx",
  "XxxxXxxx=Xxx,Xxx",
  "XxxxXxxxx(xxxxd);[dd/dd/dd",
  "XxxxXxxxx(xxxxd);xxx(xxxx",
  "Xxxx[dd/dd/dd",
  "Xxxx\\x",
  "Xxxxx",
  "Xxxxx\"",
  "Xxxxx\");xxxx(\"\\x",
  "Xxxxx\");xxxxXxxxx(&xxx);xxxx;xxxx",
  "Xxxxx\");xxxxXxxxxXxx(&xxx);xxxx;xxxx",
  "Xxxxx):\\x\");xxxx(xxxxXxxdX()){xxxx",
  "Xxxxx):\\x\");xxxx(xxxxXxxdXXxxx()){xxxx",
  "Xxxxx*/xxxx",
  "Xxxxx*\u2022*Xxxx",
  "Xxxxx*\u2022Xxxxx",
  "Xxxxx-d-XXXX",
  "Xxxxx.",
  "Xxxxx.xxxx.xxxXxxxx",
  "Xxxxx.xxxx<dd?Xxxxx[x]:x+d",
  "Xxxxx.\u2022Xxxxx",
  "Xxxxx:\\x\");//Xxxxx",
  "Xxxxx:\\x\");//Xxxxx;xxxx",
  "Xxxxx:\\x\");//Xxxxx;}xxxx(xxxx);xxxx(\"\\x\\x\u00bfXxxxx",
  "Xxxxx:\\x\");xxxx(xxxxXxxxx()){xxxx",
  "Xxxxx;xxx",
  "Xxxxx;xxxx",
  "Xxxxx</xd",
  "Xxxxx</xxxx",
  "Xxxxx=Xxx",
  "Xxxxx=Xxxx",
  "Xxxxx=Xxxx|XxxXxxx=Xxxx|Xxxxx=Xxxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxxx|XxxXxxx=Xxxx|Xxxxx=Xxxx|XxxxXxxx=Xxx,Xxx",
  "Xxxxx=Xxxx|XxxXxxx=Xxx|Xxxxx=Xxxx",
  "Xxxxx=Xxxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxxx|XxxxXxxx=Xxx,Xxx",
  "Xxxxx=Xxxx|Xxxxx=Xxxx",
  "Xxxxx=Xxxx|Xxxxx=Xxxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxxx|Xxxxx=Xxxx|XxxxXxxx=Xxxx",
  "Xxxxx=Xxxx|Xxxxx=Xxxx|Xxxxx=Xxxx|XxxxXxxx=Xxxx",
  "Xxxxx=Xxxx|Xxxxx=Xxxx|Xxxxx[xxxx]=Xxxx|Xxxxx=d|Xxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxxx|Xxxxx=d|Xxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxxx|Xxxxx[xxxx]=Xxxx|Xxxxx=d|Xxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxx|XxxXxxx=Xxxx|Xxxxx=Xxxx",
  "Xxxxx=Xxx|XxxXxxx=Xxxx|Xxxxx=Xxxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxx|XxxXxxx=Xxx|Xxxxx=Xxxx",
  "Xxxxx=Xxx|Xxxxx=Xxxx",
  "Xxxxx=Xxx|Xxxxx=Xxxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxx|Xxxxx=Xxxx|XxxxXxxx=Xxxx",
  "Xxxxx=Xxx|Xxxxx=Xxxx|Xxxxx=Xxxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxx|Xxxxx=Xxxx|Xxxxx=Xxxx|XxxxXxxx=Xxxx",
  "Xxxxx=Xxx|Xxxxx=Xxxx|Xxxxx[xxxx]=Xxxx|Xxxxx=d|Xxxx=Xxx|XxxxXxxx=Xxx",
  "Xxxxx=Xxx|Xxxxx=Xxx|Xxxxx=Xxxx|XxxxXxxx=Xxx",
  "Xxxxx=d|XxxxXxxx=Xxx|XxxxXxxx=Xxx|Xxxxx=Xxx",
  "XxxxxXxx",
  "XxxxxXxxx=Xxxx",
  "XxxxxXxxx=Xxx|XxxxxXxxx=Xxxx",
  "XxxxxXxxxx",
  "Xxxxx[dd/dd/dd",
  "Xxxxx\\x",
  "Xxxxx\\x\");xxxx",
  "Xxxxx_\u2022Xxxxx",
  "Xxxxx\u200e[dd/dd/dd",
  "Xx\u200e[dd/dd/dd",
  "Y",
  "Ya",
  "Yahir[07/09/22",
  "Yes",
  "Yo",
  "[",
  "[-:",
  "[:",
  "[=",
  "\\",
  "\\\")",
  "\\d{2}:\\d{2}:\\d{2",
  "\\n",
  "\\n\");imprimeListaRec(cab);break;case",
  "\\n\");imprimelistarec(cab);break;case",
  "\\n\");printf",
  "\\n\");printf(\"Campos",
  "\\n\");printf(\"Florencio",
  "\\n\");printf(\"campos",
  "\\n\");printf(\"florencio",
  "\\n\\n\\n\");printf(\"Opcion",
  "\\n\\n\\n\");printf(\"opcion",
  "\\t",
  "\\x",
  "\\x\");xxxx",
  "\\x\");xxxx(\"Xxxxx",
  "\\x\");xxxx(\"xxxx",
  "\\x\");xxxx(xxx);xxxx;xxxx",
  "\\x\");xxxxXxxxxXxx(xxx);xxxx;xxxx",
  "\\x\\x\\x\");xxxx(\"Xxxxx",
  "\\x\\x\\x\");xxxx(\"xxxx",
  "\\x{d}:\\x{d}:\\x{d",
  "]",
  "]=",
  "]if",
  "^",
  "^_^",
  "^__^",
  "^___^",
  "_*)",
  "_-)",
  "_.)",
  "_<)",
  "_^)",
  "__-",
  "__^",
  "_\u00ac)",
  "_\u0ca0)",
  "a",
  "a.",
  "a.C.",
  "a.J.C.",
  "a.c.",
  "a.j.c.",
  "a.m",
  "a.m.",
  "a.total",
  "a05d56",
  "a\\n",
  "aaber",
  "aba",
  "abarca",
  "abe",
  "abierta",
  "abierto",
  "abonan",
  "abonar",
  "abordar",
  "abrazo",
  "abrazos",
  "ab\u00f3",
  "aca",
  "acaba",
  "acabar",
  "acab\u00f3",
  "ace",
  "aceleracion",
  "aceptado",
  "aceptar",
  "act",
  "action=\"/classify",
  "actividad",
  "actividades",
  "actualHeight",
  "actualWidth",
  "actualheight",
  "actualwidth",
  "acuerdo",
  "acuerdo[10/09/22",
  "acu\u00e9rdense",
  "ac\u00e1",
  "ada",
  "added",
  "ade",
  "adem\u00e1s",
  "adentro",
  "adj",
  "admin",
  "admin[07/09/22",
  "ado",
  "adp",
  "adv",
  "advtype=tim",
  "afectadas",
  "afectado",
  "afectuoso",
  "age",
  "agosto",
  "agrada",
  "agradar",
  "agradecimiento",
  "agradecimientos",
  "agregamos",
  "agregar",
  "agregue",
  "aguanta",
  "aguanten",
  "agu\u00e1ntamar",
  "agu\u00e1ntame",
  "ah",
  "ahora",
  "ahorita",
  "ah\u00ed",
  "ai",
  "aih",
  "ain",
  "ait",
  "aja",
  "aje",
  "ajo",
  "aj\u00e1",
  "ake",
  "al",
  "al.",
  "ala",
  "alan",
  "alberto",
  "ale",
  "aleatoriamente?[10/09/22",
  "alfredo",
  "alfredo[07/09/22",
  "algo",
  "algoritmo",
  "alguien",
  "alguna",
  "alguno",
  "algunos",
  "all",
  "alla",
  "alo",
  "altura",
  "am",
  "ama",
  "ambas",
  "ambos",
  "ame",
  "amexcomp",
  "amiga",
  "amigo",
  "amigos",
  "amlo.nota",
  "amo",
  "ams",
  "ana",
  "anah\u00ed",
  "analizar",
  "and",
  "andaba",
  "andar",
  "andrea",
  "andr\u00e9s[07/09/22",
  "anf",
  "anguloDec);void",
  "anguloDec){float",
  "angulodec);void",
  "angulodec){float",
  "animo",
  "anio",
  "anio);}[11/09/22",
  "anio;printf(\"\\nIngresa",
  "anio;printf(\"\\ningresa",
  "aniofinal",
  "anios",
  "ano",
  "ant",
  "anterior._Entradas",
  "anterior._entrada",
  "anterior._entradas",
  "antes",
  "antonio",
  "aparece",
  "aparecer",
  "apdo",
  "apdo.",
  "apellidos[07/09/22",
  "app",
  "aprovechar \u00e9l",
  "aprov\u00e9chalo",
  "aprox",
  "aprox.",
  "aquel",
  "aqui",
  "aqu\u00ed",
  "aqu\u00ed[10/09/22",
  "ara",
  "arc\"+i;}).text(function(d",
  "archivo",
  "ard",
  "are",
  "arim\u00e9tica",
  "arim\u00e9tico",
  "aritmetica",
  "aritmetica(NUM",
  "aritmetica(Numeros",
  "aritmetica(num",
  "aritmetica(numeros",
  "aritmetico",
  "aritm\u00e9tica",
  "aritm\u00e9tica:\\n\");switch(menuaritmetica()){case",
  "aritm\u00e9tica\\n",
  "ark",
  "aro",
  "arr_family[MAX];int",
  "arr_family[i].age_year",
  "arr_family[max];int",
  "arriba",
  "art",
  "artes",
  "art\u00edculo",
  "art\u00edculos",
  "ar\u00e1",
  "as",
  "as/",
  "asa",
  "asc",
  "ase",
  "ash",
  "asibreak;case",
  "asignar",
  "asign\u00f3",
  "aso",
  "ass",
  "asunto",
  "as\u00ed",
  "as\u00ed[06/09/22",
  "as\u00ed[15/09/22",
  "as\u00f3",
  "ata",
  "ate",
  "ath",
  "ato",
  "ats",
  "aul",
  "aunque",
  "autob\u00fas",
  "autores();int",
  "aux;[11/09/22",
  "aux;int",
  "auxiliar",
  "auxiliar){if(N",
  "auxiliar){if(n",
  "av",
  "av.",
  "avda",
  "avda.",
  "avdd[06/09/22",
  "aver",
  "averir",
  "avir",
  "avisar",
  "avisas",
  "aviso",
  "avrdd[07/09/22",
  "av\u00edan",
  "axis",
  "aya",
  "ayer",
  "ayuda[07/09/22",
  "azo",
  "a\u00f1adir",
  "a\u00f1adi\u00f3",
  "a\u00f1adi\u00f3.[06/09/22",
  "a\u00f1o",
  "a\u00f1o[15/09/22",
  "a\u00f1os",
  "a\u00fal",
  "a\u00fan",
  "b",
  "b.",
  "b.h",
  "b.total",
  "baja",
  "baja[12/09/22",
  "ban",
  "bar",
  "barajas",
  "bas",
  "base",
  "base}else{fact",
  "basica",
  "basicas",
  "bc5",
  "bed",
  "bee",
  "bel",
  "ben",
  "bendecir",
  "bendiciones",
  "bendici\u00f3n",
  "bendiga",
  "ber",
  "bia",
  "bie",
  "bien",
  "bien[06/09/22",
  "bio",
  "bir",
  "bisiesto",
  "bisiesto\");break;case",
  "bi\u00e9",
  "bi\u00f3",
  "bla",
  "ble",
  "body",
  "bonaventuriana",
  "bonito",
  "book",
  "borde",
  "bos",
  "bottom",
  "bot\u00f3n",
  "bozzo",
  "bre",
  "break",
  "break;default",
  "brendita",
  "brendiux",
  "breve",
  "bro",
  "bro[12/09/22",
  "br\u00e1",
  "buen",
  "buena",
  "buenas",
  "bueno",
  "buenos",
  "buscar",
  "buscar \u00e9l",
  "buscarlo",
  "b\u00e1rbara",
  "b\u00e1sicamente",
  "b\u00e1sicas",
  "b\u00e1sico",
  "b\u00fas",
  "c",
  "c){int",
  "c){printf(\"\\ningresa",
  "c){printf(\"\\ningrese",
  "c++",
  "c->n1",
  "c->n1);switch(op){case",
  "c->n1*c->n2;printf(\"\\nla",
  "c->n2);break;default",
  "c->n4",
  "c->res",
  "c->res);}float",
  "c.",
  "c00",
  "cab",
  "cada",
  "cal",
  "calculatedOffset",
  "calculatedoffset",
  "calientito",
  "call",
  "calls",
  "cambia",
  "cambiar",
  "cambie",
  "cambio",
  "cambios",
  "cambi\u00e9",
  "camino",
  "campos",
  "can",
  "cap",
  "capitulo",
  "cap\u00edtulo",
  "cap\u00edtulos",
  "car",
  "caracter",
  "caracteres",
  "caray",
  "cargar",
  "cargo?[06/09/22",
  "carlos",
  "carmen",
  "carta",
  "cas",
  "casa",
  "casa[12/09/22",
  "case",
  "case=acc,nom|gender=masc|number=plur|person=1|prontype=prs",
  "case=acc,nom|number=plur|person=2|polite=form|prontype=prs",
  "case=acc|definite=def|gender=masc|number=sing|person=3|prepcase=npr|prontype=prs",
  "case=acc|gender=fem|number=plur|person=3|prepcase=npr|prontype=prs",
  "case=acc|gender=fem|number=plur|person=3|prepcase=npr|prontype=prs|verbform=ger",
  "case=acc|gender=fem|number=plur|person=3|prepcase=npr|prontype=prs|verbform=inf",
  "case=acc|gender=fem|number=sing|person=3|prepcase=npr|prontype=prs",
  "case=acc|gender=masc|number=plur|person=3|prepcase=npr|prontype=prs",
  "case=acc|gender=masc|number=plur|person=3|prepcase=npr|prontype=prs|verbform=inf",
  "case=acc|gender=masc|number=sing|person=3|prepcase=npr|prontype=prs",
  "case=acc|gender=masc|number=sing|person=3|prepcase=npr|prontype=prs|verbform=inf",
  "case=acc|mood=imp|number=plur|person=3|prepcase=npr|prontype=prs|reflex=yes|verbform=fin",
  "case=acc|mood=imp|number=sing|person=2|prepcase=npr|prontype=prs|reflex=yes|verbform=fin",
  "case=acc|number=plur|person=1|prepcase=npr|prontype=prs",
  "case=acc|number=plur|person=1|prepcase=npr|prontype=prs|reflex=yes",
  "case=acc|number=sing|person=1|prepcase=pre|prontype=prs",
  "case=acc|number=sing|person=2|prepcase=npr|prontype=prs",
  "case=acc|number=sing|person=2|prepcase=pre|prontype=prs",
  "case=acc|person=3|prepcase=npr|prontype=prs",
  "case=acc|person=3|prepcase=npr|prontype=prs|reflex=yes",
  "case=dat|number=plur|person=1|prepcase=npr|prontype=prs",
  "case=dat|number=plur|person=1|prepcase=npr|prontype=prs|reflex=yes",
  "case=dat|number=plur|person=1|prepcase=npr|prontype=prs|verbform=ger",
  "case=dat|number=plur|person=3|prontype=prs",
  "case=dat|number=sing|person=1|prepcase=npr|prontype=prs",
  "case=dat|number=sing|person=1|prepcase=npr|prontype=prs|reflex=yes",
  "case=dat|number=sing|person=2|prepcase=npr|prontype=prs",
  "case=dat|number=sing|person=2|prepcase=npr|prontype=prs|reflex=yes",
  "case=dat|number=sing|person=2|prepcase=npr|prontype=prs|verbform=inf",
  "case=dat|number=sing|person=3|prontype=prs",
  "case=dat|number=sing|person=3|prontype=prs|verbform=inf",
  "case=dat|person=3|prepcase=npr|prontype=prs",
  "case=dat|person=3|prepcase=npr|prontype=prs|reflex=yes",
  "case=nom|number=sing|person=1|prontype=prs",
  "caso",
  "casos",
  "category,'scores",
  "categor\u00eda",
  "categor\u00edas",
  "cconj",
  "ce>",
  "centro",
  "cer",
  "cerda",
  "ces",
  "cha",
  "chabelo\"",
  "chafear",
  "chafearon",
  "changed",
  "changedir",
  "chapters",
  "char",
  "chat",
  "chat[07/09/22",
  "chavos",
  "chavo\u200e[07/09/22",
  "checa",
  "checado",
  "checar",
  "checar \u00e9l",
  "checarlo",
  "checir",
  "checo",
  "cheque",
  "chequen",
  "chica",
  "chicas",
  "chico",
  "chicos",
  "chin",
  "cho",
  "cia",
  "ciclo",
  "ciclos.\u2022Declarar",
  "ciclos.\u2022declarar",
  "cie",
  "cierto[07/09/22",
  "cifrado",
  "cifrados",
  "cil",
  "cilindro\\n",
  "cio",
  "cir",
  "civismo",
  "clase",
  "clases",
  "classification",
  "classification)else",
  "classify')except",
  "classify(message)return",
  "classify</h1",
  "classify</title",
  "classify_message():try",
  "classifying",
  "clo",
  "cocina",
  "colega",
  "colegas",
  "colombia",
  "colombiano",
  "color",
  "color(d.name",
  "color.domain().map(function(name",
  "color.domain(d3.keys(data[0]).filter(function(key",
  "colors;var",
  "combinaci\u00f3n",
  "comentadas.[10/09/22",
  "comentado",
  "comentados",
  "comentar",
  "comentario",
  "comentarios",
  "comentarios_\u2022todas",
  "comento",
  "como",
  "compa",
  "compartieron",
  "compartir",
  "compas",
  "compiando",
  "compiar",
  "compila",
  "compilar",
  "complejo",
  "completando",
  "completar",
  "complete",
  "complete).emulateTransitionEnd(150",
  "complete).emulatetransitionend(150",
  "completo",
  "completos",
  "compound",
  "compu",
  "computadora",
  "comun",
  "comunicaci\u00f3n",
  "con",
  "conacyt",
  "conclusi\u00f3n",
  "conde",
  "confirmar",
  "confirme",
  "confunda",
  "confundir",
  "conisoft",
  "conmigo[12/09/22",
  "conocer",
  "conozco",
  "considerando",
  "considerar",
  "constant",
  "consultar:\");scanf(\"%i",
  "contador",
  "contadores",
  "contar",
  "contar \u00e9l",
  "cont\u00e1ndolas",
  "conv_aRadianes(90)){printf(\"\\n",
  "conv_aRadianes(float",
  "conv_aradianes(90)){printf(\"\\n",
  "conv_aradianes(float",
  "convenciones",
  "convenciones[10/09/22",
  "convenciones[15/09/22",
  "convenci\u00f3n[10/09/22",
  "conventions",
  "convocatoria",
  "copiando",
  "copiar",
  "coque",
  "corchetes.\u00b7Ejemplos:\u00b7\"Confirmar",
  "corchetes.\u00b7ejemplos:\u00b7\"confirmar",
  "corre",
  "correctamente[12/09/22",
  "correcto",
  "corregir",
  "correo",
  "correr",
  "corrijamos",
  "corr\u00ed",
  "cos",
  "cos(conv_aRadianes(C->n1));break;case",
  "cos(conv_aradianes(c->n1));break;case",
  "cosa",
  "cosas",
  "cosas[07/09/22",
  "coseno",
  "crear",
  "creaste",
  "created",
  "creer",
  "creo",
  "cre\u00f3",
  "csv",
  "cta",
  "cto",
  "cuadrangular\\n",
  "cuadrangularbreak;}break;case",
  "cuadrangularbreak;}case",
  "cualquier",
  "cualquiera",
  "cuando",
  "cuanto",
  "cuantos",
  "cubo",
  "cuenta",
  "cuentan",
  "cuidado",
  "cuidar",
  "cuide",
  "cuiden \u00e9l",
  "cumplan",
  "cumplido",
  "cumplidos",
  "cumplir",
  "curso",
  "cursos",
  "cu\u00e1l",
  "cu\u00e1ntas",
  "cu\u00e1ntos",
  "cu\u00eddense",
  "cvu-sni",
  "cyt",
  "c\u00e1rcamo",
  "c\u00eda",
  "c\u00eda.",
  "c\u00edrculo\\n",
  "c\u00f3digo",
  "c\u00f3digo*_Naming",
  "c\u00f3digo*_naming",
  "c\u00f3digos",
  "c\u00f3mo",
  "d",
  "d)",
  "d).xxxx(\"xx",
  "d);xxxx",
  "d);xxxx(\"%x\",&xxx_xxxx[x].xxx_xxxx);xxxx(\"Xxxx",
  "d);xxxx(\"%x\",&xxx_xxxx[x].xxx_xxxx);xxxx(\"xxxx",
  "d);xxxx(\"%x\",&xxxx);xxxx",
  "d);xxxx(&xxx);xxxx",
  "d);xxxxXxxxx(&xxx);xxxx",
  "d)Xxxxx",
  "d)xxxx",
  "d)xxxx(\"\\x",
  "d){xx(x",
  "d){xxxx",
  "d){xxxx(X-d",
  "d){xxxx(x-d",
  "d-",
  "d-)",
  "d-X",
  "d.",
  "d.-",
  "d.C.",
  "d.J.C.",
  "d.ages",
  "d.ages[d.ages.length",
  "d.c.",
  "d.d",
  "d.dddd",
  "d.dddd/*Xxxxx",
  "d.dddd/*xxxx",
  "d.endAngle",
  "d.endangle",
  "d.j.c.",
  "d.startAngle",
  "d.startangle",
  "d.total",
  "d.x",
  "d0743c",
  "d3.csv(\"data.csv",
  "d3.max(data",
  "d3.scale.linear().rangeRound([height",
  "d3.scale.linear().rangeround([height",
  "d3.scale.ordinal().range([\"#98abc5",
  "d3.scale.ordinal().rangeRoundBands([0",
  "d3.scale.ordinal().rangeroundbands([0",
  "d3.select(\"body\").append(\"svg\").attr(\"width",
  "d3.svg.axis().scale(x).orient(\"bottom",
  "d3.svg.axis().scale(y).orient(\"left\").tickFormat(d3.format(\".2s",
  "d3.svg.axis().scale(y).orient(\"left\").tickformat(d3.format(\".2s",
  "d56",
  "d://Xxxxx",
  "d://Xxxxx;xxxx",
  "d://Xxxxx;}xxxx",
  "d://Xxxxx;}xxxx;xxxx",
  "d://xxxx",
  "d://xxxx;xxxx",
  "d://xxxx;}xxxx",
  "d://xxxx;}xxxx;xxxx",
  "d:dd:dd",
  "d;x.xxxx",
  "d;xx",
  "d;xxxx;xxxx",
  "d;xxxx;}xxxx",
  "d;xxxx;}xxxx;xxxx",
  "d;xxxxd.xxxx",
  "d;}[dd/dd/dd",
  "d;}xxxx",
  "d@s",
  "dX",
  "dX\");XXXX",
  "d[name",
  "d\\n",
  "d\\n\",i",
  "d].xd",
  "d_d",
  "d_x",
  "da",
  "da.",
  "dad",
  "dado",
  "dame",
  "dan",
  "dar",
  "das",
  "data",
  "data.forEach(function(d",
  "data.foreach(function(d",
  "data.sort(function(a",
  "dato",
  "dato);break;case",
  "dato);case",
  "dato;int",
  "datos",
  "datos*/typedef",
  "dd",
  "dd).xxxx(\"xxxx",
  "dd*Xxxx",
  "dd*xxxx",
  "dd/dd/dd",
  "dd:dd",
  "dd:dd:dd",
  "dd;xxxx(\"Xx",
  "dd;xxxx(\"xx",
  "ddd",
  "ddd*Xxxx",
  "ddd*xxxx",
  "dddd",
  "dddd----|\");xxxx(\"\\x",
  "dddd-xxxx\u0303x.xxx",
  "dddd;[dd/dd/dd",
  "ddddXxxxx",
  "dddd_Xxxxx",
  "dddd_xxxx",
  "ddddxxxx",
  "dddd\u202c",
  "dddd\u202c[dd/dd/dd",
  "ddx.",
  "ddx.x",
  "ddx.x.",
  "dd},xxxx",
  "de",
  "dea",
  "debe",
  "debemos",
  "deben",
  "deber",
  "decir",
  "decir t\u00fa",
  "decirte",
  "declarar",
  "declaraste",
  "ded",
  "def",
  "definamos",
  "definida*/#define",
  "definir",
  "definite=def|gender=fem|number=plur|prontype=art",
  "definite=def|gender=fem|number=sing|prontype=art",
  "definite=def|gender=masc|number=plur|prontype=art",
  "definite=def|gender=masc|number=sing|prontype=art",
  "definite=ind|gender=fem|number=sing|prontype=art",
  "definite=ind|gender=masc|number=plur|prontype=art",
  "definite=ind|gender=masc|number=sing|prontype=art",
  "degree=cmp",
  "degree=cmp|number=plur",
  "degree=cmp|number=sing",
  "deja",
  "dejan",
  "dejar",
  "dejen",
  "del",
  "delgado",
  "delta",
  "dem\u00e1",
  "dem\u00e1s",
  "dem\u00e1s?[06/09/22",
  "den",
  "den \u00e9l",
  "denle",
  "dentro",
  "deo",
  "depender",
  "dependiendo",
  "der",
  "des",
  "descanse",
  "descargar",
  "desde",
  "desea",
  "desear",
  "deseas",
  "desees",
  "deseo",
  "deseos",
  "despu\u00e9s",
  "destino",
  "destino);hanoi(N-1",
  "destino);hanoi(n-1",
  "destino);printf(\"\\n",
  "detecta",
  "detectar",
  "devolver",
  "devolver\u00eda",
  "devuelve",
  "dez",
  "di",
  "dia",
  "dia);printf(\"\\nIngresa",
  "dia);printf(\"\\ningresa",
  "diagrama",
  "dias",
  "dias();//LIBRER\u00cdAS://#include",
  "dias();//librer\u00edas://#include",
  "dias(){int",
  "diastranscurridos(fecha1);[11/09/22",
  "diastranscurridos(fecha2);for(numanios",
  "dices",
  "dices[11/09/22",
  "dicho",
  "die",
  "dif",
  "diferente",
  "diferentes",
  "digan[10/09/22",
  "digas",
  "digital",
  "digo",
  "dimension",
  "dio",
  "dios",
  "diosito",
  "dir",
  "disc=0;printf(\"\\n",
  "disfruta",
  "disfrutar",
  "display*/void",
  "disponible",
  "distancia",
  "dividamos",
  "dividir",
  "dividir[07/09/22",
  "divisi\u00f3n",
  "divisi\u00f3n\\n",
  "di\u00f3",
  "dna",
  "dna.",
  "do.",
  "doce",
  "document",
  "dominio",
  "dominios",
  "donde",
  "dor",
  "dos",
  "do{printf(\"1.-",
  "dpto",
  "dpto.",
  "dr",
  "dr.",
  "dra",
  "dra.",
  "dro",
  "ds.",
  "dth",
  "duda",
  "dudas",
  "durante",
  "dx",
  "dx\");xxxx",
  "dx.x",
  "dx.x.",
  "dxdddd",
  "dxdddx",
  "dxddxd",
  "dxxx",
  "d{2",
  "d\u00eda",
  "d\u00edas",
  "d\u00f3riga",
  "e",
  "e(0",
  "e.",
  "e.attr('data-original-title",
  "e.attr('title",
  "ead",
  "eak",
  "ean",
  "ear",
  "eas",
  "ebe",
  "ebo",
  "eca",
  "ece",
  "eco",
  "econom\u00eda",
  "ect",
  "ed2",
  "eda",
  "edad",
  "edades",
  "edades\");break;case",
  "ede",
  "editorial",
  "edo",
  "educaci\u00f3n",
  "educativo",
  "ed\u00f3",
  "ee",
  "ee. uu.",
  "ee.uu",
  "ee.uu.",
  "eer",
  "ees",
  "efectiva",
  "efectivo",
  "eft",
  "ega",
  "ego",
  "ei\u200e[06/09/22",
  "ej",
  "ej.",
  "eja",
  "eje",
  "ejecutar:\\n\\n",
  "ejecutar:\\n\\n\");do{printf(\"1.-",
  "ejemplo",
  "ejercicio",
  "ejo",
  "el",
  "elaborado",
  "elaborando",
  "elaborar",
  "elegir",
  "elige",
  "eligiendo",
  "elijamos",
  "elimina",
  "eliminado",
  "eliminar",
  "eliminar\");printf(\"\\n",
  "eliminaste",
  "elimin\u00f3",
  "else",
  "em",
  "ema",
  "embargo",
  "emi",
  "emma",
  "emmanuel\\n",
  "emo",
  "empezar",
  "empiezo",
  "em\u00e1",
  "en",
  "ena",
  "enablePopover",
  "enablepopover",
  "encabezado",
  "encontrar",
  "encontr\u00e9",
  "encrypted",
  "encryption",
  "encuentren",
  "end",
  "end\").text(\"Population",
  "end\").text(\"population",
  "end\").text(function(d",
  "end-to-end",
  "endfor",
  "endif",
  "ene",
  "enlace",
  "enlazadas-----------------|\");printf(\"\\n",
  "eno",
  "ent",
  "entender",
  "entendido",
  "entendi\u00f3",
  "entend\u00ed",
  "entiendo",
  "entonces",
  "entrada",
  "entradas",
  "entrante",
  "entre",
  "enu",
  "enviado",
  "enviar",
  "env\u00edo",
  "en\u00fa",
  "eof",
  "eos",
  "epicentro",
  "ept",
  "equipo",
  "equipo*/void",
  "equipo[06/09/22",
  "equipon",
  "era",
  "ere",
  "eres",
  "eri",
  "ero",
  "error",
  "error='Error",
  "error='No",
  "error='error",
  "error='no",
  "errores",
  "ers",
  "er\u00e1",
  "es",
  "esa",
  "esas",
  "escala",
  "escolar",
  "escribamos",
  "escribir",
  "escribir \u00e9l",
  "escribirlo",
  "escuchar \u00e9l",
  "escucharlos",
  "escucharlos.[06/09/22",
  "ese",
  "esfera",
  "esfuerzo",
  "eso",
  "esos",
  "esp",
  "espa\u00f1ol.\u2022*No",
  "espa\u00f1ol.\u2022*no",
  "especial",
  "especiales",
  "especie",
  "especificar",
  "especifiquen",
  "espec\u00edficas",
  "espec\u00edfico",
  "espera",
  "esperar",
  "esperar yo",
  "espero",
  "esper\u00e1ndonos",
  "esq",
  "esq.",
  "esquinas[15/09/22",
  "est",
  "esta",
  "estaba",
  "estadistica",
  "estadistica\");break;case",
  "estad\u00edsitica:\\n\");//estad\u00edsticabreak;case",
  "estad\u00edstica",
  "estad\u00edstica\\n",
  "estar",
  "estar\u00e1",
  "estas",
  "este",
  "estilo",
  "estimado",
  "estimados",
  "esto",
  "estos",
  "estoy",
  "estructura",
  "estructuras",
  "estudio",
  "estudios",
  "estuve",
  "estuvo",
  "est\u00e1",
  "est\u00e1n",
  "est\u00e9",
  "eta",
  "etc",
  "etc.",
  "ete",
  "eto",
  "eve",
  "even",
  "evi",
  "evo",
  "exacto",
  "excelente",
  "exception",
  "existe\");}}while(opcion",
  "exitoso",
  "expl:impers",
  "expl:pass",
  "expl:pv",
  "ext",
  "extensiones",
  "extensi\u00f3n",
  "extremo",
  "ezo",
  "e\u00f1a",
  "f",
  "f\",c->n3",
  "f(N",
  "f(n",
  "f.",
  "f\\n",
  "fa.",
  "fact",
  "factorail\");break;case",
  "factorial",
  "factorial(int",
  "factorial(n-1);}}else{fact",
  "factorial:\\n\");//factorialbreak;case",
  "factorial\\n",
  "fake",
  "falla",
  "fallas",
  "false",
  "falta",
  "faltaba",
  "faltaban",
  "faltar",
  "faltaron",
  "falto",
  "familia",
  "family",
  "fat",
  "favor",
  "fecha",
  "fecha\");break;case",
  "fecha1.anio);printf(\"\\n\\n%i",
  "fecha1.anio+1;numanios",
  "fecha1.anio==fecha2.anio?0:365",
  "fecha1.dia",
  "fecha1.mes",
  "fecha2.anio);[11/09/22",
  "fecha2.anio);anioinicio",
  "fecha2.anio;numanios){if(((numanios%4==0",
  "fecha2.dia",
  "fecha2.dia);printf(\"\\nIngresa",
  "fecha2.dia);printf(\"\\ningresa",
  "fecha2.mes",
  "fecha2.mes);printf(\"\\nIngresa",
  "fecha2.mes);printf(\"\\ningresa",
  "felicidad",
  "felicidades",
  "felicitaciones",
  "felicitaci\u00f3n",
  "felicitar",
  "felicito",
  "feliz",
  "fen\u00f3meno",
  "fen\u00f3menos",
  "fernando",
  "festej",
  "festejo",
  "ff8c00",
  "fflush(stdin);scanf(\"%c",
  "fgr.pdf",
  "fig",
  "fig.",
  "file",
  "filosof\u00eda",
  "fin",
  "final",
  "final\");eliminafinalrec(&cab);break;case",
  "final\");printf(\"\\n",
  "final[10/09/22",
  "firma",
  "fixed",
  "flat",
  "float",
  "flotante",
  "flotantes",
  "flujo[07/09/22",
  "for",
  "for?[15/09/22",
  "form",
  "formulas",
  "foto",
  "fotos",
  "fue",
  "fuera",
  "fuerte",
  "fuerza",
  "fuerza(Numeros",
  "fuerza(numeros",
  "fuerza:\\n\");//fuerzabreak",
  "fuerza:\\n\");//fuerzabreak;}fflush(stdin);printf(\"\\n\\n\u00bfdesea",
  "fuerza\\n",
  "funcion",
  "funciona",
  "funcionar",
  "funciones",
  "funciones)_\u2022Nombres",
  "funciones)_\u2022nombr",
  "funciones)_\u2022nombres",
  "funciones.\u2022Hacer",
  "funciones.\u2022hacer",
  "funci\u00f3n",
  "function",
  "function(d",
  "function(error",
  "f\u00e1cil",
  "f\u00e1ciles",
  "f\u00eda",
  "f\u00edsica",
  "f\u00edsico",
  "g",
  "g\").attr(\"transform",
  "g.",
  "galilea",
  "gallegos",
  "gan",
  "gar",
  "garc\u00eda",
  "gas",
  "ged",
  "gen",
  "gender=fem|number=plur",
  "gender=fem|number=plur|prontype=dem",
  "gender=fem|number=plur|prontype=ind",
  "gender=fem|number=plur|prontype=tot",
  "gender=fem|number=plur|verbform=part",
  "gender=fem|number=sing",
  "gender=fem|number=sing|number[psor]=plur|person=1|poss=yes|prontype=prs",
  "gender=fem|number=sing|prontype=dem",
  "gender=fem|number=sing|prontype=ind",
  "gender=fem|number=sing|tense=past|verbform=part",
  "gender=fem|number=sing|verbform=part",
  "gender=fem|numtype=card|number=plur",
  "gender=fem|numtype=card|number=plur|prontype=ind",
  "gender=fem|numtype=ord|number=sing",
  "gender=masc",
  "gender=masc|number=plur",
  "gender=masc|number=plur|number[psor]=plur|person=1|poss=yes|prontype=prs",
  "gender=masc|number=plur|prontype=dem",
  "gender=masc|number=plur|prontype=ind",
  "gender=masc|number=plur|prontype=tot",
  "gender=masc|number=plur|tense=past|verbform=part",
  "gender=masc|number=plur|verbform=part",
  "gender=masc|number=sing",
  "gender=masc|number=sing|number[psor]=plur|person=1|poss=yes|prontype=prs",
  "gender=masc|number=sing|prontype=dem",
  "gender=masc|number=sing|prontype=ind",
  "gender=masc|number=sing|prontype=neg",
  "gender=masc|number=sing|prontype=tot",
  "gender=masc|number=sing|tense=past|verbform=part",
  "gender=masc|number=sing|verbform=part",
  "gender=masc|numtype=card|number=plur|prontype=int,rel",
  "gender=masc|numtype=card|number=sing|prontype=ind",
  "gender=masc|numtype=card|number=sing|prontype=int,rel",
  "gender=masc|numtype=ord|number=sing",
  "general",
  "generales",
  "genial",
  "geo2DArea(NUM",
  "geo2DPeri(NUM",
  "geo2darea(num",
  "geo2dperi(num",
  "geo3D(NUM",
  "geo3d(num",
  "geometria3d(Numeros",
  "geometria3d(numeros",
  "geometr\u00eda",
  "ger",
  "gerardo",
  "gerardo\\n\");printf",
  "ges",
  "getMessages('static",
  "getMessages(filename):messages",
  "getmessages('static",
  "getmessages(filename):messages",
  "ght",
  "gil",
  "gio",
  "gir",
  "git",
  "gi\u00f3",
  "gle",
  "gloria",
  "gno",
  "gn\u00f3",
  "gob",
  "gob.",
  "gonz\u00e1lez",
  "gos",
  "gpi[15/09/22",
  "gracia",
  "gracias",
  "gracias[12/09/22",
  "gral",
  "gral.",
  "gran",
  "grande",
  "grandes",
  "group",
  "group's",
  "grupo",
  "grupo.[06/09/22",
  "grupo[06/09/22",
  "gth",
  "guardando",
  "guardar",
  "guard\u00eda",
  "gue",
  "guerrero",
  "guti\u00e9rrez",
  "gu\u00e9",
  "g\u00fan",
  "h",
  "h.",
  "h1",
  "h_2",
  "ha",
  "haber",
  "habr\u00e1",
  "hace",
  "hacemos",
  "hacer",
  "hacer \u00e9l",
  "hacerlo?[11/09/22",
  "hacerlos",
  "haciendo",
  "hac\u00edan",
  "hanna",
  "hanoi(int",
  "har",
  "haremos",
  "has",
  "hasta",
  "hat",
  "hay",
  "haya",
  "hayan",
  "head",
  "hecho",
  "hector",
  "height",
  "hello_world():return",
  "hem",
  "hermanos",
  "hermosa",
  "hermoso",
  "hernandez",
  "hern\u00e1ndez",
  "hhh",
  "hice",
  "himno",
  "hin",
  "his",
  "historia",
  "hks",
  "hoja",
  "hojas",
  "hola",
  "hola[06/09/22",
  "hon",
  "hor",
  "hora",
  "hotel",
  "hoy",
  "hr",
  "hr\",C->n2",
  "hr\",c->n2",
  "href\",function(d",
  "html",
  "i",
  "i){return",
  "i++)[11/09/22",
  "i+1",
  "i.",
  "i;float",
  "ial",
  "ian",
  "iar",
  "ias",
  "iba",
  "ic.",
  "ica",
  "ice",
  "ico",
  "icon",
  "id=\"message",
  "ida",
  "ide",
  "idea",
  "ido",
  "ien",
  "ier",
  "if",
  "if(conv_aRadianes(C->n1",
  "if(conv_aradianes(c->n1",
  "ify",
  "ig.",
  "iga",
  "ige",
  "ignacio[07/09/22",
  "igo",
  "igual",
  "igualmente",
  "ii",
  "iii",
  "ijo",
  "ike",
  "ila",
  "ile",
  "ill",
  "ilo",
  "ily",
  "image",
  "ime",
  "imo",
  "implementaci\u00f3n",
  "implementar \u00e9l",
  "implementarlo",
  "import",
  "impreso",
  "impresos",
  "imprimir \u00e9l",
  "imprimirlas",
  "in",
  "ina",
  "inc",
  "includar",
  "include",
  "indefinido\\n\");disc++;}elseC->res",
  "indefinido\\n\");disc++;}elsec->res",
  "index():return",
  "ine",
  "ing",
  "ing.",
  "ingl\u00e9s",
  "ingl\u00e9s.\u2022nombr",
  "ingl\u00e9s.\u2022nombres",
  "ingresa",
  "ingresar",
  "ingrese",
  "ingreso",
  "ini",
  "inicia",
  "iniciado",
  "inicialmente",
  "inician",
  "iniciar",
  "inicio",
  "inicio\");eliminainicio(&cab);break;case",
  "inicio\");printf(\"\\n",
  "inicio)._Funciones_\u2022Incluir",
  "inicio)._funciones_\u2022incluir",
  "ink",
  "ino",
  "input",
  "insercion",
  "insertar",
  "int",
  "integrante",
  "integrantes",
  "intentar",
  "intent\u00e9",
  "internado",
  "interpretado",
  "interpretar",
  "interrogaci\u00f3n",
  "inter\u00e9s",
  "investigaci\u00f3n",
  "invitaci\u00f3n",
  "involucradas",
  "involucrado",
  "in\u00f3",
  "ion",
  "ios",
  "iphone",
  "ipo",
  "ir",
  "ira",
  "ir\u00e1",
  "is",
  "isa",
  "isagamesinc",
  "isaih",
  "isa\u00ed",
  "isbn",
  "isc",
  "isi",
  "iso",
  "ita",
  "ith",
  "ito",
  "iux",
  "iva",
  "ivo",
  "ize",
  "i\u00e9n",
  "i\u00f3n",
  "j",
  "j.",
  "j.c.",
  "jaime",
  "jaja",
  "jajaa[11/09/22",
  "jajaja",
  "jan",
  "jar",
  "jas",
  "javier",
  "jcr",
  "jeje",
  "jen",
  "jes",
  "joe",
  "jor",
  "jorge",
  "josafat",
  "jsonify({'category",
  "jsonify({'error",
  "juarez",
  "jueves",
  "junto",
  "juntos",
  "juriel[07/09/22",
  "k",
  "k.",
  "karla",
  "kel",
  "ker",
  "kevin",
  "kevin[07/09/22",
  "key",
  "kir",
  "km",
  "km/h",
  "kok",
  "l",
  "l.",
  "l\\n",
  "la",
  "lado",
  "lan",
  "lar",
  "largos.\u2022Usar",
  "largos.\u2022usar",
  "las",
  "lat",
  "laura",
  "le",
  "lea",
  "lee",
  "leemos",
  "leer",
  "leer \u00e9l",
  "leerlos",
  "left",
  "legarreta",
  "legend",
  "legend\").attr(\"transform",
  "legend.append(\"rect\").attr(\"x",
  "legend.append(\"text\").attr(\"x",
  "len",
  "ler",
  "les",
  "leve",
  "leyendo",
  "lez",
  "lga",
  "lgo",
  "li",
  "lia",
  "libro",
  "libros",
  "lic",
  "lic.",
  "like",
  "line",
  "line):messages.append(line)return",
  "lio",
  "lir",
  "lista",
  "listen",
  "listo[12/09/22",
  "lit",
  "liz",
  "lla",
  "llamada",
  "llamadas",
  "llamar",
  "llame",
  "llamemos",
  "llegar",
  "llego",
  "llegu\u00e9",
  "lleno",
  "llevaba",
  "llevamos",
  "llevar",
  "llevar\u00e1",
  "llevo[11/09/22",
  "llo",
  "lls",
  "lo",
  "lo\"",
  "local",
  "local->tm_mday;fecha1.mes",
  "local->tm_mon",
  "local->tm_year",
  "localtime(&now);fecha1.dia",
  "lor",
  "los",
  "lse",
  "lta",
  "lto",
  "lud",
  "luego",
  "luis",
  "lupitina",
  "lur",
  "lva",
  "lve",
  "l\u00e9s",
  "l\u00f3pez",
  "m",
  "m.",
  "m.n",
  "m.n.",
  "m/h",
  "m;printf(\"\\nSeleccione",
  "m;printf(\"\\nseleccione",
  "madrugada",
  "main",
  "main(){char",
  "main(){int",
  "main(){system(\"color",
  "mal",
  "mala",
  "man[07/09/22",
  "mandalo",
  "mandamos",
  "mandan[00/00/00",
  "mandando",
  "mandar",
  "mandaron",
  "mande",
  "manden",
  "mando",
  "mando[11/09/22",
  "manejar",
  "maneje",
  "manejo",
  "manera",
  "maneras",
  "mano[07/09/22",
  "mar",
  "margin.bottom",
  "margin.bottom).append(\"g\").attr(\"transform",
  "margin.left",
  "margin.right",
  "margin.top",
  "maribel",
  "maritere",
  "marquez",
  "mart\u00ednez",
  "mar\u00ednes",
  "mas",
  "masa",
  "match.groups()[-1].strip",
  "matem\u00e1tica",
  "matem\u00e1ticas",
  "math.h>#define",
  "math.h>/*Constante",
  "math.h>/*constante",
  "maussan",
  "mayor",
  "mayores",
  "ma\u00f1ana",
  "mbr",
  "me",
  "mediante",
  "medio",
  "mejor",
  "mejora",
  "mejoras",
  "mejores",
  "member",
  "members",
  "members;int",
  "members;year_2",
  "men",
  "menos",
  "mensaje",
  "mensaje)[10/09/22",
  "mensaje.[12/09/22",
  "mensaje.\u2022Etiquetar",
  "mensaje.\u2022Si",
  "mensaje.\u2022etiquetar",
  "mensaje.\u2022si",
  "mensajes",
  "mensajes*\u2022incluir",
  "menu",
  "menu(){int",
  "menuAritmetica();int",
  "menuAritmetica(){int",
  "menuGeo2DArea();int",
  "menuGeo2DArea(){int",
  "menuGeo2DPeri();int",
  "menuGeo2DPeri(){int",
  "menuGeo3D();/*Funciones",
  "menuGeo3D();int",
  "menuGeo3D(){int",
  "menuPrincipal();int",
  "menuPrincipal(){int",
  "menuTrigonometria();int",
  "menuTrigonometria(){int",
  "menuaritmetica();int",
  "menuaritmetica(){int",
  "menugeo2darea();int",
  "menugeo2darea(){int",
  "menugeo2dperi();int",
  "menugeo2dperi(){int",
  "menugeo3d();/*funciones",
  "menugeo3d();int",
  "menugeo3d(){int",
  "menuprincipal();int",
  "menuprincipal(){int",
  "menutrigonometria();int",
  "menutrigonometria(){int",
  "men\u00fa",
  "men\u00fa[07/09/22",
  "men\u00fa[10/09/22",
  "mes",
  "meses",
  "message",
  "messages",
  "messages.append(message)message",
  "messages.txt')return",
  "messages</h1",
  "messages</title",
  "method=\"post",
  "methods=['POST'])def",
  "methods=['post'])def",
  "mexicano",
  "mi",
  "miembro",
  "miembros",
  "mientras",
  "mikel",
  "min",
  "mira",
  "miren",
  "miren[10/09/22",
  "mirka",
  "mirkir",
  "mis",
  "mismo",
  "mit",
  "mitad",
  "mi\u00e9rcoles",
  "mm",
  "mma",
  "mmm",
  "mno",
  "mod",
  "modelando",
  "modelar",
  "modificanto",
  "molesto",
  "momento",
  "mon",
  "monsiv\u00e1is",
  "month",
  "month;total",
  "month;}total",
  "month_2",
  "month_2;printf(\"El",
  "month_2;printf(\"el",
  "montijo",
  "montse",
  "montserrat",
  "mood=cnd|number=plur|person=1|verbform=fin",
  "mood=cnd|number=plur|person=3|verbform=fin",
  "mood=cnd|number=sing|person=3|verbform=fin",
  "mood=imp|number=plur|person=1|verbform=fin",
  "mood=imp|number=plur|person=3|verbform=fin",
  "mood=imp|number=sing|person=2|verbform=fin",
  "mood=imp|number=sing|person=3|verbform=fin",
  "mood=ind|number=plur|person=1|tense=fut|verbform=fin",
  "mood=ind|number=plur|person=1|tense=pres|verbform=fin",
  "mood=ind|number=plur|person=3|tense=fut|verbform=fin",
  "mood=ind|number=plur|person=3|tense=imp|verbform=fin",
  "mood=ind|number=plur|person=3|tense=past|verbform=fin",
  "mood=ind|number=plur|person=3|tense=pres|verbform=fin",
  "mood=ind|number=sing|person=1|tense=past|verbform=fin",
  "mood=ind|number=sing|person=1|tense=pres|verbform=fin",
  "mood=ind|number=sing|person=2|tense=fut|verbform=fin",
  "mood=ind|number=sing|person=2|tense=past|verbform=fin",
  "mood=ind|number=sing|person=2|tense=pres|verbform=fin",
  "mood=ind|number=sing|person=3|tense=fut|verbform=fin",
  "mood=ind|number=sing|person=3|tense=imp|verbform=fin",
  "mood=ind|number=sing|person=3|tense=past|verbform=fin",
  "mood=ind|number=sing|person=3|tense=pres|verbform=fin",
  "mood=sub|number=plur|person=1|tense=imp|verbform=fin",
  "mood=sub|number=plur|person=1|tense=pres|verbform=fin",
  "mood=sub|number=plur|person=3|tense=imp|verbform=fin",
  "mood=sub|number=plur|person=3|tense=pres|verbform=fin",
  "mood=sub|number=sing|person=1|tense=pres|verbform=fin",
  "mood=sub|number=sing|person=2|tense=pres|verbform=fin",
  "mood=sub|number=sing|person=3|tense=imp|verbform=fin",
  "mood=sub|number=sing|person=3|tense=pres|verbform=fin",
  "moreno",
  "mos",
  "mostrar",
  "mover",
  "moviendo",
  "mpa",
  "mpo",
  "mpu",
  "muchas",
  "mucho",
  "muestra",
  "muestre",
  "multiplicaci\u00f3n\");printf(\"\\n",
  "multiplicaci\u00f3n\\n",
  "mun",
  "muy",
  "mu\u00f1iz",
  "mu\u00f1oz",
  "myrka",
  "m\u00e1rquez",
  "m\u00e1rquez[06/09/22",
  "m\u00e1s",
  "m\u00e1s[07/09/22",
  "m\u00e9rida",
  "m\u00e9rida\u200e[06/01/18",
  "m\u00e9xicohanna",
  "m\u00ed?[00/00/00",
  "m\u00ed?[10/09/22",
  "m\u00eda",
  "n",
  "n%i",
  "n(a",
  "n(d",
  "n){int",
  "n-1",
  "n.",
  "n1",
  "n1;float",
  "n2",
  "n2;}Numeros",
  "n2;}numero",
  "n2;}numeros",
  "n3",
  "nI",
  "nLa",
  "n\\n",
  "n\\t",
  "n]:\"\u00b7escala",
  "na.",
  "nacional",
  "nada",
  "nada[15/09/22",
  "nadie",
  "nal",
  "name",
  "name=\"message",
  "names.length<99?names[i]:i+1",
  "names;var",
  "nan",
  "nar",
  "nas",
  "natural",
  "naturales",
  "nce",
  "nct",
  "nda",
  "nde",
  "ndo",
  "nd\u00ed",
  "necesario",
  "necesitar",
  "necesitariamos",
  "necesito",
  "necesito[11/09/22",
  "negrita",
  "negritas",
  "nel",
  "nen",
  "ner",
  "nes",
  "newNames.length<99?16:12)+\"px\").style(\"text-anchor\",\"middle\").attr(\"xlink",
  "newnames.length<99?16:12)+\"px\").style(\"text-anchor\",\"middle\").attr(\"xlink",
  "nez",
  "ng.",
  "ngo",
  "ni",
  "nieto",
  "ninguno",
  "ning\u00fan",
  "nio",
  "nir",
  "niurka",
  "ni\u00f3",
  "nla",
  "nle",
  "nna",
  "no",
  "no?[07/09/22",
  "no[06/09/22",
  "nombre",
  "nombre[07/09/22",
  "nombres",
  "nombres[15/09/22",
  "nombresaqui(){printf(\"Los",
  "nombresaqui(){printf(\"los",
  "nombresequi(){printf(\"Los",
  "nombresequi(){printf(\"los",
  "nom\u00e1s",
  "none",
  "nos",
  "nosotros",
  "not",
  "noticia\u200e[19/11/19",
  "noun",
  "now",
  "nse",
  "nta",
  "nte",
  "ntf",
  "nth",
  "nto",
  "nt\u00e9",
  "nuestra",
  "nuestro",
  "nuestros",
  "nuevo",
  "nuevos",
  "null",
  "numanios%100!=0)))totaldias+=366;elsetotaldias+=365;[11/09/22",
  "number=plur",
  "number=plur|number[psor]=sing|person=1|poss=yes|prontype=prs",
  "number=plur|number[psor]=sing|person=2|poss=yes|prontype=prs",
  "number=plur|person=3|poss=yes|prontype=prs",
  "number=plur|prontype=ind",
  "number=sing",
  "number=sing|number[psor]=sing|person=1|poss=yes|prontype=prs",
  "number=sing|number[psor]=sing|person=2|poss=yes|prontype=prs",
  "number=sing|person=3|poss=yes|prontype=prs",
  "number=sing|prontype=dem",
  "number=sing|prontype=ind",
  "number=sing|prontype=int,rel",
  "number=sing|prontype=neg",
  "number=sing|prontype=tot",
  "numero",
  "numeros",
  "numform=digit",
  "numform=digit|numtype=card",
  "numform=digit|numtype=frac",
  "nummod",
  "numtype=card|number=plur",
  "nus",
  "n\u00b0",
  "n\u00eda",
  "n\u00ednel",
  "n\u00fam",
  "n\u00fam.",
  "n\u00famero",
  "n\u00fameros",
  "o",
  "o.",
  "o.0",
  "o.O",
  "o.o",
  "o\\n",
  "o_0",
  "o_O",
  "o_o",
  "oat",
  "oaxaca",
  "ob.",
  "obed",
  "obtener",
  "obviamente",
  "oca",
  "oce",
  "oco",
  "oc\u00f3",
  "odo",
  "odr",
  "ody",
  "of",
  "of.",
  "ofa",
  "offset",
  "oficina",
  "oft",
  "oh",
  "ohhhh",
  "oid",
  "oigan",
  "oir",
  "oja",
  "ojeda",
  "ok",
  "okey",
  "okok",
  "ol.",
  "ola",
  "ola[07/09/22",
  "olo",
  "olv\u00eddalo",
  "omitido",
  "omitido[07/09/22",
  "omitted",
  "omitted\u200e[06/01/18",
  "omm",
  "omo",
  "omp",
  "ona",
  "onda",
  "one",
  "oner",
  "onj",
  "ono",
  "ons",
  "ook",
  "op",
  "op);[07/09/22",
  "op);float",
  "op);void",
  "op);}int",
  "op);}while",
  "op){float",
  "op){int",
  "op;do{printf(\"\\n",
  "op;float",
  "op;printf(\"Elige",
  "op;printf(\"elige",
  "opacityDefault;var",
  "opacitydefault;var",
  "opcion",
  "opcion;do{printf(\"\\n",
  "opciones",
  "opci\u00f3n",
  "operacion",
  "operaciones",
  "operaci\u00f3n",
  "operador",
  "operador)\\n",
  "operadores",
  "operando",
  "operandos",
  "or",
  "ora",
  "oratoria",
  "ordenada\");printf(\"\\n",
  "ordenado",
  "org",
  "organicemos",
  "organizar",
  "origen",
  "orm",
  "ort",
  "ory",
  "osa",
  "oso",
  "ost",
  "ota",
  "othon",
  "oto",
  "otra",
  "otras",
  "otro",
  "otros",
  "oup",
  "outside",
  "ova",
  "ox.",
  "oye",
  "p",
  "p's",
  "p.",
  "p.d",
  "p.d.",
  "p.ej",
  "p.ej.",
  "p.m",
  "p.m.",
  "p[0",
  "pa",
  "pag",
  "pages",
  "panini",
  "papel",
  "para",
  "parametro",
  "parece",
  "parece?[10/09/22",
  "parecer",
  "pareja",
  "pareja[10/09/22",
  "parejas",
  "parezca",
  "part",
  "parte",
  "partes",
  "par\u00e1metro",
  "pas",
  "pasacer",
  "pasala",
  "pasalar",
  "pasan",
  "pasando",
  "pasar",
  "pasar\u00edamos",
  "pase",
  "paso",
  "pas\u00f3",
  "paz",
  "pdf",
  "pdo",
  "pedir",
  "pedir\u00eda",
  "pegado",
  "pegados",
  "pel",
  "pendiente",
  "pensamiento",
  "pensando",
  "pensar",
  "perfecto",
  "pero",
  "person=3|prepcase=npr|prontype=prs|reflex=yes",
  "persona",
  "personas",
  "per\u00edmetro):\\n\");switch(menugeo2dperi()){case",
  "per\u00edmetro)\\n",
  "per\u00edmetro:\\n\\n\");do{printf(\"1.-",
  "peso",
  "pez",
  "pe\u00f1a",
  "pi",
  "pi/180",
  "pia",
  "pide",
  "piden",
  "pio",
  "pir\u00e1mide",
  "placement",
  "placement)}Tooltip.prototype.replaceArrow",
  "placement)}tooltip.prototype.replacearrow",
  "placement.call(this",
  "planas",
  "plataforma",
  "plazo",
  "ple",
  "plo",
  "pl\u00e1sticas",
  "pl\u00e1stico",
  "pm",
  "poco",
  "pocoD\u00e9jame",
  "pocod\u00e9jame",
  "podemos",
  "poder",
  "podr",
  "podriamos",
  "podr\u00eda",
  "podr\u00edamos",
  "polarity=neg",
  "poliedro",
  "pol\u00edgono",
  "pon",
  "ponemos",
  "poner",
  "pongan",
  "por",
  "porque",
  "pos",
  "pos.height",
  "pos.left",
  "pos.top",
  "pos.width",
  "posibles[07/09/22",
  "posir",
  "pre",
  "pregunta",
  "preguntar",
  "preguntar \u00e9l",
  "preguntarle",
  "preguntota",
  "preparativos",
  "primera",
  "primero",
  "primo",
  "principio",
  "principios",
  "printf(\"2.-",
  "printf(\"3.-",
  "printf(\"4.-",
  "printf(\"5.-",
  "printf(\"6.-",
  "printf(\"7.-",
  "printf(\"8.-",
  "printf(\"9.-",
  "printf(\"Buscar",
  "printf(\"Edad",
  "printf(\"Elimina",
  "printf(\"Error",
  "printf(\"Ingrese",
  "printf(\"Insercion",
  "printf(\"Mostrar",
  "printf(\"PROGRAMA",
  "printf(\"\\n",
  "printf(\"\\n1)Area",
  "printf(\"\\n1)Suma:\\n2)Resta:\\n3)Multiplicacion:\\n\");scanf(\"%d\",&op);//Lee",
  "printf(\"\\n1)area",
  "printf(\"\\n1)suma:\\n2)resta:\\n3)multiplicacion:\\n\");scanf(\"%d\",&op);//lee",
  "printf(\"\\n2)Area",
  "printf(\"\\n2)area",
  "printf(\"\\n3)Area",
  "printf(\"\\n3)area",
  "printf(\"\\nIngresa",
  "printf(\"\\nIngrese",
  "printf(\"\\n\\n%i",
  "printf(\"\\ningresa",
  "printf(\"\\ningrese",
  "printf(\"buscar",
  "printf(\"edad",
  "printf(\"elimina",
  "printf(\"error",
  "printf(\"ingrese",
  "printf(\"insercion",
  "printf(\"mostrar",
  "printf(\"programa",
  "printf)_\u2022Mensajes",
  "printf)_\u2022mensajes",
  "prisma",
  "probar",
  "probar \u00e9l",
  "probarlo",
  "problema",
  "problemas",
  "proceso",
  "prof",
  "prof.",
  "profa",
  "profa.",
  "profesor",
  "profesores",
  "profundidad",
  "programa",
  "programar",
  "progreso",
  "promedio",
  "promedioarr_family[i].age_month",
  "pron",
  "prontype=ind",
  "prontype=int,rel",
  "propia",
  "propio",
  "propn",
  "proponer",
  "propongo",
  "propuesta",
  "prop\u00f3sito",
  "prosperidad",
  "proteger",
  "proteja",
  "prototipo",
  "prototipo[10/09/22",
  "prototipos",
  "provechoso",
  "proyecto",
  "proyectos",
  "pruebo",
  "pr\u00f3spero",
  "pseudoc\u00f3digo",
  "pto",
  "pude",
  "pudieran",
  "puebla",
  "puedan",
  "puedas[11/09/22",
  "puede",
  "puedes",
  "puedo",
  "puerto",
  "pues",
  "punctside=fin|puncttype=brck",
  "punctside=fin|puncttype=excl",
  "punctside=fin|puncttype=qest",
  "punctside=ini|puncttype=brck",
  "punctside=ini|puncttype=excl",
  "punctside=ini|puncttype=qest",
  "puncttype=colo",
  "puncttype=comm",
  "puncttype=dash",
  "puncttype=peri",
  "puncttype=quot",
  "puncttype=semi",
  "punto",
  "puse",
  "pusiste",
  "puso",
  "put",
  "p\u00e1g",
  "p\u00e1g.",
  "p\u00e1gina",
  "p\u00e1ginas",
  "q",
  "q.",
  "q.e.p.d",
  "q.e.p.d.",
  "que",
  "queda",
  "quedando",
  "quedar",
  "quedara",
  "quedaron?[00/00/00",
  "quedar\u00eda",
  "queden",
  "qued\u00f3",
  "queremos",
  "querer",
  "querido",
  "queridos",
  "qui",
  "quien",
  "quiera",
  "quieran",
  "quiere",
  "quieren",
  "quieres",
  "quirrr",
  "qui\u00e9n",
  "qu\u00e9",
  "qu\u00ed",
  "r",
  "r(e",
  "r(i",
  "r.",
  "r\\n",
  "r_2",
  "ra.",
  "rac",
  "rad",
  "rad;rad=(anguloDec*pi)/180;return(rad",
  "rad;rad=(angulodec*pi)/180;return(rad",
  "radio",
  "ral",
  "ran",
  "rar",
  "rara",
  "raras",
  "raro",
  "raros",
  "ras",
  "rat",
  "rato",
  "raul",
  "raul[07/09/22",
  "ray",
  "ra\u00fal",
  "rca",
  "rck",
  "rda",
  "rde",
  "rdo",
  "re.match(r'\\d{2}/\\d{2}/\\d{2",
  "re1",
  "rea",
  "read",
  "realice",
  "realizar",
  "realizarprintf(\"\\nIngrese",
  "realizarprintf(\"\\ningrese",
  "realizarswitch(op){case",
  "realmente",
  "reciban",
  "recomendar",
  "recomiendo",
  "rectangular\\n",
  "rectangularbreak;case",
  "rect\u00e1ngulo\\n",
  "recursividad",
  "red",
  "redef",
  "redmis",
  "referencia",
  "referir",
  "refiere",
  "regil",
  "registrar \u00e9l",
  "registrarlo",
  "regresa",
  "regresar",
  "ren",
  "render_template('classify.html",
  "render_template('hello-world.html')@app.route('/classify",
  "render_template('index.html",
  "render_template('messages.html",
  "renovaci\u00f3n",
  "rentar",
  "reo",
  "repartieramos",
  "repartir",
  "replace",
  "replace.left",
  "replace.top",
  "replacevar",
  "replit",
  "requerimiento",
  "requerimientos",
  "requerir",
  "request.form['message']if",
  "requiere",
  "requisito",
  "requisitos",
  "rer",
  "res",
  "res;int",
  "resI;}NUM;/*Menus",
  "resi;}num;/*menus",
  "resoluci\u00f3n*/void",
  "resolver",
  "resp",
  "resp);}while",
  "resp;do{fflush(stdin);switch(menuPrincipal()){case",
  "resp;do{fflush(stdin);switch(menuprincipal()){case",
  "respecto",
  "respetar",
  "responder",
  "respondiendo",
  "resta",
  "resta\\n",
  "restricci\u00f3n",
  "resuelto",
  "resuelva",
  "resultado",
  "resultado;printf(\"Seleccione",
  "resultado;printf(\"\\nIngrese",
  "resultado;printf(\"\\ningrese",
  "resultado;printf(\"seleccione",
  "resultado=(C->n1",
  "resultado=(C->n1*C->n2);break;case",
  "resultado=(C->n1*C->n3);break;default",
  "resultado=(C->n1+C->n2);break;case",
  "resultado=(C->n1-C->n2);break;case",
  "resultado=(c->n1",
  "resultado=(c->n1*c->n2);break;case",
  "resultado=(c->n1*c->n3);break;default",
  "resultado=(c->n1+c->n2);break;case",
  "resultado=(c->n1-c->n2);break;case",
  "resumirlo[07/09/22",
  "retorno?[11/09/22",
  "retorno[10/09/22",
  "return",
  "revisamos",
  "revisar",
  "reyes",
  "rez",
  "re\u00f3",
  "rge",
  "rgo",
  "ria",
  "right",
  "rio",
  "rip",
  "rir",
  "rka",
  "rla",
  "rle",
  "rlo",
  "rma",
  "rme",
  "roberto[07/09/22",
  "rodriguez",
  "rof",
  "rogelio",
  "rojas",
  "ron",
  "ror",
  "ros",
  "rosca",
  "rosma",
  "rotate(-90",
  "row",
  "rox",
  "rre",
  "rrr",
  "rr\u00ed",
  "rse",
  "rso",
  "rta",
  "rte",
  "rto",
  "rva",
  "rza",
  "rzo",
  "r\u00e1n",
  "r\u00e1pido",
  "r\u00e9plica",
  "r\u00e9plicas",
  "r\u00e9s",
  "r\u00eda",
  "s",
  "s');}int",
  "s.",
  "s.a.",
  "s.l.",
  "s.r.l.",
  "s.s",
  "s.s.s",
  "s.s.s.",
  "sabe",
  "sabee",
  "saber",
  "sabr\u00eda",
  "sacar",
  "sal",
  "salazar",
  "sale",
  "salga",
  "salida",
  "salidas",
  "salidas.\u2022Hacer",
  "salidas.\u2022hacer",
  "salinas",
  "salir",
  "salud",
  "saludo",
  "saludos",
  "san",
  "santo",
  "sar",
  "sas",
  "sa\u00ed",
  "sbn",
  "sca",
  "scanf",
  "scanf(\"%d",
  "scanf(\"%d\",&C->n4);printf(\"\\nIngresa",
  "scanf(\"%d\",&c->n4);printf(\"\\ningresa",
  "scanf(\"%d\",&dato);InsertaInicio(&cab",
  "scanf(\"%d\",&dato);eliminaDatoBuscadoRec(&cab",
  "scanf(\"%d\",&dato);eliminadatobuscadorec(&cab",
  "scanf(\"%d\",&dato);insertaFinal(&cab",
  "scanf(\"%d\",&dato);insertaOrdenadoRec(&cab",
  "scanf(\"%d\",&dato);insertafinal(&cab",
  "scanf(\"%d\",&dato);insertainicio(&cab",
  "scanf(\"%d\",&dato);insertaordenadorec(&cab",
  "scanf(\"%d\",&members);for(i",
  "scanf(\"%d\",&op);//Lee",
  "scanf(\"%d\",&op);//lee",
  "scanf(\"%d\",&opcion);switch(opcion){case",
  "scanf(\"%f",
  "scanf(\"%f\",&C->n1);C->n2",
  "scanf(\"%f\",&C->n1);printf(\"\\nIngrese",
  "scanf(\"%f\",&C->n1);resultado=(C->n1*C->n1*C->n1);//son",
  "scanf(\"%f\",&C->n1);resultado=(C->n1*C->n1*C->n1);resultado=((4/3)*PI*resultado);break;default",
  "scanf(\"%f\",&C->n1);scanf(\"%f\",&C->n2);switch(op){case",
  "scanf(\"%f\",&C->n2);C->n3",
  "scanf(\"%f\",&C->n2);printf(\"\\Ingrese",
  "scanf(\"%f\",&C->n3);resultado=(C->n1*C->n2*C->n3);break;case",
  "scanf(\"%f\",&c->n1);c->n2",
  "scanf(\"%f\",&c->n1);printf(\"\\ningrese",
  "scanf(\"%f\",&c->n1);resultado=(c->n1*c->n1*c->n1);//son",
  "scanf(\"%f\",&c->n1);resultado=(c->n1*c->n1*c->n1);resultado=((4/3)*pi*resultado);break;default",
  "scanf(\"%f\",&c->n1);scanf(\"%f\",&c->n2);switch(op){case",
  "scanf(\"%f\",&c->n2);c->n3",
  "scanf(\"%f\",&c->n2);printf(\"\\ingrese",
  "scanf(\"%f\",&c->n3);resultado=(c->n1*c->n2*c->n3);break;case",
  "sconj",
  "score_values})except",
  "sde",
  "se",
  "sea",
  "secured",
  "seguir",
  "seguir\u00e1",
  "seg\u00fan",
  "seg\u00fan[10/09/22",
  "seleccionar",
  "semana",
  "sentir",
  "seo",
  "ser",
  "seres",
  "sergio",
  "servicio",
  "servir",
  "ser\u00e1",
  "ser\u00e1n",
  "ser\u00eda",
  "ser\u00edan",
  "ses",
  "set",
  "sexual",
  "shottle",
  "si",
  "si[06/09/22",
  "siempre",
  "sigan",
  "sigas",
  "significativo",
  "significativos",
  "signo",
  "sigo",
  "sigue",
  "siguiente",
  "siguiente[10/09/22",
  "siiii",
  "simple",
  "simples",
  "sin",
  "sin(conv_aRadianes(C->n1));break;case",
  "sin(conv_aradianes(c->n1));break;case",
  "sinti\u00f3",
  "sip",
  "siquiera",
  "sir",
  "sirva",
  "sis",
  "sisi",
  "sisis",
  "sisisi",
  "sistema",
  "sitio",
  "si\u200e[07/09/22",
  "sma",
  "smn",
  "smo",
  "snake_case",
  "sni",
  "sobre",
  "software",
  "solamente",
  "solicitante",
  "solicitantes",
  "solicitud",
  "solicitudes",
  "solo",
  "somos",
  "son",
  "sonar",
  "sor",
  "sorpresa",
  "sorpresas",
  "sos",
  "soy",
  "space",
  "sq.",
  "sr",
  "sr.",
  "sra",
  "sra.",
  "srta",
  "srta.",
  "ssale",
  "sta",
  "state",
  "state.selectAll(\"rect\").data(function(d",
  "state.selectall(\"rect\").data(function(d",
  "stdio.h>#include",
  "stdio.h>//#include",
  "stdlib.h",
  "stdlib.h>#include",
  "stdlib.h>//FUNCION",
  "stdlib.h>//funcion",
  "ste",
  "sticker",
  "sto",
  "str(e",
  "string",
  "struct",
  "struct{float",
  "st\u00e1",
  "st\u00e9",
  "su",
  "subir",
  "subi\u00f3",
  "subject",
  "submenu",
  "subo",
  "suceder",
  "sucedi\u00f3",
  "suena",
  "suma",
  "suma\\n",
  "supone",
  "suponer",
  "surgir",
  "surgi\u00f3",
  "sus",
  "susto",
  "svg",
  "svg.append(\"g\").attr(\"class",
  "svg.selectAll(\".legend\").data(color.domain().slice().reverse",
  "svg.selectAll(\".state\").data(data",
  "svg.selectall(\".legend\").data(color.domain().slice().reverse",
  "svg.selectall(\".state\").data(data",
  "svg;var",
  "switch",
  "switch(menuPrincipal()){case",
  "switch(menuprincipal()){case",
  "sym",
  "s\u00f3lo",
  "t",
  "t(e",
  "t.",
  "t[0",
  "ta.",
  "tad",
  "tal",
  "talentosa",
  "talent\u00f3s",
  "tambi\u00e9n",
  "tambi\u00e9n[10/09/22",
  "tan",
  "tan(conv_aRadianes(C->n1));break;}if(disc",
  "tan(conv_aradianes(c->n1));break;}if(disc",
  "tantito",
  "tanto",
  "tar",
  "tarde",
  "tardes",
  "tarea",
  "tarea-2-requerimientos",
  "tareas*\u2022*main",
  "tas",
  "tc.",
  "tch",
  "te",
  "teams",
  "tecnica",
  "tecnico",
  "ted",
  "tej",
  "tel",
  "telef\u00f3nica",
  "telef\u00f3nico",
  "televisa",
  "tema",
  "temas",
  "temperatura",
  "temperatura\");break;case",
  "temperatura?\")\u2022Si",
  "temperatura?\")\u2022si",
  "ten",
  "tendr\u00eda",
  "tenemos",
  "tener",
  "tener \u00e9l",
  "tenerlo",
  "tengamos",
  "tengan",
  "tengas",
  "tengo",
  "ten\u00eda",
  "ter",
  "terminado[12/09/22",
  "terminar",
  "termine",
  "tes",
  "text'](title)$tip.removeClass('fade",
  "text'](title)$tip.removeclass('fade",
  "texto",
  "that",
  "that.hoverState",
  "that.hoverstate",
  "that.type",
  "the",
  "them",
  "thi",
  "this",
  "this.$element",
  "this.$element[0",
  "this.$tip.hasClass('fade",
  "this.$tip.hasclass('fade",
  "this.applyPlacement(offset",
  "this.applyplacement(offset",
  "this.getCalculatedOffset(placement",
  "this.getPosition()var",
  "this.getTitle",
  "this.getTitle()$tip.find('.tooltip-inner')[this.options.html",
  "this.getcalculatedoffset(placement",
  "this.getposition()var",
  "this.gettitle",
  "this.gettitle()$tip.find('.tooltip-inner')[this.options.html",
  "this.options.container).off('mousemove');this.$element.trigger(e",
  "this.options.placement",
  "this.options.placement.call(this",
  "this.options.viewport",
  "this.options.viewport.padding",
  "this.options.viewport.selector",
  "this.replaceArrow(offset.left",
  "this.replacearrow(offset.left",
  "this.tip()var",
  "this.type)function",
  "thisvar",
  "this}Tooltip.prototype.fixTitle",
  "this}tooltip.prototype.fixtitle",
  "thks",
  "ti",
  "tic",
  "tiempo",
  "tiene",
  "tienen",
  "tienes",
  "tio",
  "tip",
  "tip.detach()that.$element.trigger('hidden.bs",
  "tip.offset().left",
  "tip.offset(replace",
  "tip.one($.support.transition.end",
  "tip[0",
  "tip[0].offsetHeight",
  "tip[0].offsetWidth",
  "tip[0].offsetWidthvar",
  "tip[0].offsetheight",
  "tip[0].offsetwidth",
  "tip[0].offsetwidthvar",
  "tipo",
  "tir",
  "title",
  "titles\").attr(\"dy",
  "ti\u00f3",
  "tle",
  "tm",
  "tml",
  "tmo",
  "to",
  "to.",
  "toca",
  "tocar",
  "toc\u00f3",
  "tod@s",
  "todas",
  "todav\u00eda",
  "todo",
  "todos",
  "todos[07/09/22",
  "tom",
  "tooltip.prototype.setcontent",
  "top",
  "tor",
  "tos",
  "total",
  "total;int",
  "total;month_2",
  "totaldias+=365;}totaldias+=anioinicio+aniofinal;[11/09/22",
  "toy",
  "tra",
  "trabajar",
  "trabajara",
  "trabajo",
  "tramitar \u00e9l",
  "tramitarlo",
  "translate",
  "translate(0",
  "transmitir",
  "transmitir\u00e1",
  "tratados",
  "tratar",
  "tre",
  "tresintegrant",
  "tresintegrantes",
  "trevi",
  "trigonometria",
  "trigonometria\");break;case",
  "trigonometria(NUM",
  "trigonometria(num",
  "trigonometrica",
  "trigonometrico",
  "trigonometr\u00eda",
  "trigonometr\u00eda:\\n\");switch(menutrigonometria()){case",
  "trigonometr\u00eda\\n",
  "triste",
  "tri\u00e1ngulo\\n",
  "tro",
  "trujillo",
  "try",
  "tr\u00e9",
  "tse",
  "tu",
  "tud",
  "tus",
  "tuviera",
  "type=\"submit",
  "type=\"text",
  "typedef",
  "typeof",
  "t\u00e1n",
  "t\u00e9rmino",
  "t\u00e9rminos",
  "t\u00f3n",
  "t\u00f3s",
  "t\u00fa",
  "u",
  "u.",
  "ual",
  "ubj",
  "ubo",
  "uct",
  "ud",
  "ud.",
  "uda",
  "ude",
  "udo",
  "uds",
  "uds.",
  "uel",
  "uen",
  "ues",
  "uez",
  "uien",
  "uir",
  "uis",
  "ul",
  "ulanova",
  "ull",
  "ulo",
  "ult",
  "uma",
  "un",
  "una",
  "und",
  "unir",
  "universal",
  "universitsrio",
  "universitsrios",
  "uni\u00f3",
  "uno",
  "unos",
  "uot",
  "upo",
  "ura",
  "urn",
  "usando",
  "usar",
  "use",
  "uso",
  "usted",
  "ustedes",
  "ustedes[06/09/22",
  "usuario",
  "uta",
  "uu",
  "uve",
  "uvo",
  "uxmal",
  "u\u00e1l",
  "u\u00e9s",
  "v",
  "v.",
  "v.v",
  "v_v",
  "va",
  "va12/09/22",
  "valen",
  "valer",
  "valida\");}printf(\"El",
  "valida\");}printf(\"el",
  "valor",
  "value=\"Classify",
  "value=\"classify",
  "vamos",
  "van",
  "var",
  "variable",
  "variable_name).\u2022Usar",
  "variable_name).\u2022usar",
  "variables",
  "varsovia",
  "vas",
  "vayamos",
  "vayan",
  "vcl",
  "vd",
  "vd.",
  "vda",
  "vds",
  "vds.",
  "ve",
  "veamos",
  "vean",
  "velocidad",
  "velocidad(Numeros",
  "velocidad(numeros",
  "velocidad:\\n\");//velocidadbreak;case",
  "velocidad\\n",
  "velocidadprintf(\"\\nLa",
  "velocidadprintf(\"\\nla",
  "vemos",
  "ven",
  "vence",
  "vencer",
  "venir",
  "veo",
  "ver",
  "verb",
  "verbform=ger",
  "verbform=inf",
  "verdad",
  "ves",
  "vez[07/09/22",
  "vi",
  "via",
  "vida",
  "video",
  "viendo",
  "vienen",
  "viernes",
  "viewport",
  "viewportDimensions",
  "viewportDimensions.bottom",
  "viewportDimensions.left",
  "viewportDimensions.right",
  "viewportDimensions.top",
  "viewportPadding",
  "viewport[0].getBoundingClientRect",
  "viewport[0].getboundingclientrect",
  "viewportdimensions",
  "viewportdimensions.bottom",
  "viewportdimensions.left",
  "viewportdimensions.right",
  "viewportdimensions.top",
  "viewportpadding",
  "vigente",
  "villase\u00f1or",
  "vin",
  "vir",
  "vocacional",
  "void",
  "vol",
  "vol.",
  "volumen):\\n\");switch(menugeo3d()){case",
  "volumen)\\n",
  "volumen:\\n\\n\");do{printf(\"1.-",
  "volver",
  "vol\u00famen",
  "vor",
  "vos",
  "voy",
  "v\u00eda",
  "v\u00edo",
  "w",
  "w.",
  "wait",
  "warning[15/09/22",
  "web",
  "whats",
  "whatsapp",
  "whatsapp._Ejemplo:_*Asunto*@nombre1",
  "whatsapp._ejemplo:_*asunto*@nombre1",
  "while",
  "width",
  "with",
  "wow",
  "x",
  "x\").xxxx(\"xxxx",
  "x\",x->xd",
  "x');}xxx",
  "x(d",
  "x(x",
  "x(x.xd",
  "x){xxx",
  "x){xxxx",
  "x){xxxx(\"\\xxxx",
  "x++)[dd/dd/dd",
  "x->xd",
  "x->xd);xxxx(xx){xxxx",
  "x->xd);xxxx;xxxx",
  "x->xd*x->xd;xxxx(\"\\xxx",
  "x->xxx",
  "x->xxx);}xxxx",
  "x.",
  "x.X",
  "x.X.",
  "x.X.X.",
  "x.d",
  "x.domain(data.map(function(d",
  "x.rangeBand",
  "x.rangeband",
  "x.x",
  "x.x.",
  "x.x.x",
  "x.x.x.",
  "x.x.x.x",
  "x.x.x.x.",
  "x.xx",
  "x.xx.",
  "x.xxxXxxxx",
  "x.xxxx",
  "x.xxxx('xxxx",
  "x.xxxx('xxxx-xxxx-xxxx",
  "x.xxxx([d",
  "x.xxxx(xxxx.xxx(xxxx(x",
  "x.xxxxXxxx",
  "x.xxxxXxxxx",
  "x.xxxx[x.xxxx.xxxx",
  "x2[10/09/22",
  "x;xxxx",
  "x;xxxx(\"\\xXxxxx",
  "x;xxxx(\"\\xxxx",
  "xAxis",
  "xD",
  "xDD",
  "xX",
  "xXX",
  "xXxxx",
  "x[xxxx",
  "x\\x\",x",
  "x]:\"\u00b7xxxx",
  "x_X",
  "x_d",
  "x_x",
  "xaxis",
  "xcl",
  "xd",
  "xd.xxx(\"xxxx.xxx",
  "xd.xxx(xxxx",
  "xd.xxx.xxxx().xxxx(x).xxxx(\"xxxx",
  "xd.xxx.xxxx().xxxx(x).xxxx(\"xxxx\").xxxx(xd.xxxx(\".dx",
  "xd.xxx.xxxx().xxxx(x).xxxx(\"xxxx\").xxxxXxxxx(xd.xxxx(\".dx",
  "xd.xxxx(\"xxxx\").xxxx(\"xxx\").xxxx(\"xxxx",
  "xd.xxxx.xxxx().xxxx([\"#ddxxxd",
  "xd.xxxx.xxxx().xxxx([d",
  "xd.xxxx.xxxx().xxxx([xxxx",
  "xd.xxxx.xxxx().xxxxXxxxx([xxxx",
  "xd.xxxx.xxxx().xxxxXxxxxXxxxx([d",
  "xd;xxxx",
  "xd;}Xxxxx",
  "xd;}xxxx",
  "xd[06/09/22",
  "xd[07/09/22",
  "xd[dd/dd/dd",
  "xdd",
  "xddddx",
  "xddxdd",
  "xed",
  "ximena[07/09/22",
  "xis",
  "xto",
  "xx",
  "xx\",X->xd",
  "xx\",x->xd",
  "xx(xxxx_xXxxxx(X->xd",
  "xx(xxxx_xxxx(x->xd",
  "xx);[dd/dd/dd",
  "xx);xxxx",
  "xx);}xxx",
  "xx);}xxxx",
  "xx){xxx",
  "xx){xxxx",
  "xx.",
  "xx.xxxx(x'\\x{d}/\\x{d}/\\x{d",
  "xx/ddd",
  "xx/x",
  "xx;xxxx",
  "xx;xxxx(\"Xxxxx",
  "xx;xxxx(\"xxxx",
  "xx;xx{xxxx(\"\\x",
  "xx=\"xxxx",
  "xx?[dd/dd/dd",
  "xx[dd/dd/dd",
  "xxd",
  "xxdd/dd/dd",
  "xxdxdd",
  "xxx",
  "xxx xx",
  "xxx\").xxxx(\"Xxxxx",
  "xxx\").xxxx(\"xxxx",
  "xxx\").xxxx(xxxx(x",
  "xxx\"+x;}).xxxx(xxxx(x",
  "xxx(x",
  "xxx(xxxx_xXxxxx(X->xd));xxxx;xxxx",
  "xxx(xxxx_xXxxxx(X->xd));xxxx;}xx(xxxx",
  "xxx(xxxx_xxxx(x->xd));xxxx;xxxx",
  "xxx(xxxx_xxxx(x->xd));xxxx;}xx(xxxx",
  "xxx);xxxx(\"\\xXxxxx",
  "xxx);xxxx(\"\\xxxx",
  "xxx-xx-xxx",
  "xxx-xxx",
  "xxx.",
  "xxx.xxx",
  "xxx.xxx($.xxxx.xxxx.xxx",
  "xxx.xxxx",
  "xxx.xxxx(\".xxxx\").xxxx(xxxx",
  "xxx.xxxx(\".xxxx\").xxxx(xxxx.xxxx().xxxx().xxxx",
  "xxx.xxxx(\"x\").xxxx(\"xxxx",
  "xxx.xxxx().xxxx",
  "xxx.xxxx()xxxx.$xxxx.xxxx('xxxx.xx",
  "xxx.xxxx(xxxx",
  "xxx.xxxxXxx(\".xxxx\").xxxx(xxxx",
  "xxx.xxxxXxx(\".xxxx\").xxxx(xxxx.xxxx().xxxx().xxxx",
  "xxx;[dd/dd/dd",
  "xxx;xxx",
  "xxx;xxx=(xxxx*xx)/ddd;xxxx(xxx",
  "xxx;xxx=(xxxxXxx*xx)/ddd;xxxx(xxx",
  "xxx?[dd/dd/dd",
  "xxx@x",
  "xxxX;}XXX;/*Xxxxx",
  "xxxXxxxx('xxxx",
  "xxxXxxxx(xxxx):xxxx",
  "xxxXxxxx.xxxx<dd?dd:dd)+\"xx\").xxxx(\"xxxx-xxxx\",\"xxxx\").xxxx(\"xxxx",
  "xxx[d",
  "xxx[d].xxxx",
  "xxx[d].xxxxXxxxx",
  "xxx[dd/dd/dd",
  "xxx_xxxx[XXX];xxx",
  "xxx_xxxx[x].xxx_xxxx",
  "xxx_xxxx[xxx];xxx",
  "xxxdX(XXX",
  "xxxdXXxxx(XXX",
  "xxxdx(xxx",
  "xxxdxxxx(xxx",
  "xxxx",
  "xxxx xx",
  "xxxx\"",
  "xxxx\").xxxx(\"xx",
  "xxxx\").xxxx(\"xxxx",
  "xxxx\");xxxx(\"\\x",
  "xxxx\");xxxx(&xxx);xxxx;xxxx",
  "xxxx\");xxxx;xxxx",
  "xxxx\");}xxxx(\"Xx",
  "xxxx\");}xxxx(\"xx",
  "xxxx\");}}xxxx(xxxx",
  "xxxx\",xxxx(x",
  "xxxx%ddd!=d)))xxxx+=ddd;xxxx+=ddd;[dd/dd/dd",
  "xxxx')xxxx",
  "xxxx'](xxxx)$xxx.xxxx('xxxx",
  "xxxx'](xxxx)$xxx.xxxxXxxxx('xxxx",
  "xxxx'x",
  "xxxx(\"%x",
  "xxxx(\"%x\",&X->xd);X->xd",
  "xxxx(\"%x\",&X->xd);xxxx(\"%x\",&X->xd);xxxx(xx){xxxx",
  "xxxx(\"%x\",&X->xd);xxxx(\"\\Xxxxx",
  "xxxx(\"%x\",&X->xd);xxxx(\"\\xXxxxx",
  "xxxx(\"%x\",&X->xd);xxxx=(X->xd*X->xd*X->xd);//xxx",
  "xxxx(\"%x\",&X->xd);xxxx=(X->xd*X->xd*X->xd);xxxx;xxxx",
  "xxxx(\"%x\",&X->xd);xxxx=(X->xd*X->xd*X->xd);xxxx=((d/d)*XX*xxxx);xxxx;xxxx",
  "xxxx(\"%x\",&x->xd);x->xd",
  "xxxx(\"%x\",&x->xd);xxxx(\"%x\",&x->xd);xxxx(xx){xxxx",
  "xxxx(\"%x\",&x->xd);xxxx(\"\\xxxx",
  "xxxx(\"%x\",&x->xd);xxxx=(x->xd*x->xd*x->xd);//xxx",
  "xxxx(\"%x\",&x->xd);xxxx=(x->xd*x->xd*x->xd);xxxx;xxxx",
  "xxxx(\"%x\",&x->xd);xxxx=(x->xd*x->xd*x->xd);xxxx=((d/d)*xx*xxxx);xxxx;xxxx",
  "xxxx(\"%x\",&xx);//Xxx",
  "xxxx(\"%x\",&xx);//xxx",
  "xxxx(\"%x\",&xxxx);XxxxxXxxxx(&xxx",
  "xxxx(\"%x\",&xxxx);xxx(x",
  "xxxx(\"%x\",&xxxx);xxxx(&xxx",
  "xxxx(\"%x\",&xxxx);xxxx(xxxx){xxxx",
  "xxxx(\"%x\",&xxxx);xxxxXxxxXxxxxXxx(&xxx",
  "xxxx(\"%x\",&xxxx);xxxxXxxxx(&xxx",
  "xxxx(\"%x\",&xxxx);xxxxXxxxxXxx(&xxx",
  "xxxx(\"XXXX",
  "xxxx(\"Xxxx",
  "xxxx(\"Xxxxx",
  "xxxx(\"\\x",
  "xxxx(\"\\xXx",
  "xxxx(\"\\xXxxxx",
  "xxxx(\"\\x\\x%x",
  "xxxx(\"\\xd)Xxxx",
  "xxxx(\"\\xd)Xxxx:\\xd)Xxxxx:\\xd)Xxxxx:\\x\");xxxx(\"%x\",&xx);//Xxx",
  "xxxx(\"\\xd)xxxx",
  "xxxx(\"\\xd)xxxx:\\xd)xxxx:\\xd)xxxx:\\x\");xxxx(\"%x\",&xx);//xxx",
  "xxxx(\"\\xxx",
  "xxxx(\"\\xxxx",
  "xxxx(\"d.-",
  "xxxx(\"xxxx",
  "xxxx(&xxx);xxxxd.xxx",
  "xxxx('xxxx",
  "xxxx():xxxx",
  "xxxx();//XXXX://#xxxx",
  "xxxx();//xxxx://#xxxx",
  "xxxx();xxx",
  "xxxx(){xxx",
  "xxxx(){xxxx",
  "xxxx(){xxxx(\"Xxx",
  "xxxx(){xxxx(\"xxx",
  "xxxx(){xxxx(\"xxxx",
  "xxxx(-dd",
  "xxxx(XXX",
  "xxxx(Xxxxx",
  "xxxx(d",
  "xxxx(x",
  "xxxx(x-d);}}xxxx{xxxx",
  "xxxx(x.xxxx",
  "xxxx(xx){xxxx",
  "xxxx(xxx",
  "xxxx(xxxx",
  "xxxx(xxxx()){xxxx",
  "xxxx(xxxx):xxxx",
  "xxxx(xxxx);xxxx(\"%x",
  "xxxx(xxxx)xxxx",
  "xxxx(xxxxXxxxx()){xxxx",
  "xxxx(xxxxd);[dd/dd/dd",
  "xxxx(xxxxd);xxx(xxxx",
  "xxxx({'xxxx",
  "xxxx)._Xxxxx_\u2022Xxxxx",
  "xxxx)._xxxx_\u2022xxxx",
  "xxxx).xxxx(ddd",
  "xxxx).xxxxXxxxxXxx(ddd",
  "xxxx):\\x\");xxxx(xxxxdx()){xxxx",
  "xxxx):\\x\");xxxx(xxxxdxxxx()){xxxx",
  "xxxx):xxxx.xxxx(xxxx)xxxx",
  "xxxx);xxxx",
  "xxxx);xxxx(\"\\x",
  "xxxx);xxxx(X-d",
  "xxxx);xxxx(x-d",
  "xxxx);xxxx;xxxx",
  "xxxx);}[dd/dd/dd",
  "xxxx);}xxxx",
  "xxxx)[dd/dd/dd",
  "xxxx)\\x",
  "xxxx)_\u2022Xxxxx",
  "xxxx)_\u2022xxxx",
  "xxxx)xxxx",
  "xxxx){xx(X",
  "xxxx){xx(x",
  "xxxx){xxxx",
  "xxxx)}Xxxxx.xxxx.xxxxXxxxx",
  "xxxx)}xxxx.xxxx.xxxx",
  "xxxx*/#xxxx",
  "xxxx*/xxxx",
  "xxxx*_Xxxxx",
  "xxxx*_xxxx",
  "xxxx*\u2022*xxxx",
  "xxxx*\u2022xxxx",
  "xxxx+=ddd;}xxxx+=xxxx+xxxx;[dd/dd/dd",
  "xxxx,'xxxx",
  "xxxx----|\");xxxx(\"\\x",
  "xxxx->xx_xxx",
  "xxxx->xx_xxxx",
  "xxxx->xx_xxxx;xxxxd.xxx",
  "xxxx-d-xxxx",
  "xxxx.",
  "xxxx.$xxx.xxxXxxxx('xxxx",
  "xxxx.$xxx.xxxx('xxxx",
  "xxxx.$xxxx",
  "xxxx.$xxxx[d",
  "xxxx.[dd/dd/dd",
  "xxxx._Xxxxx",
  "xxxx._Xxxxx:_*Xxxxx*@xxxxd",
  "xxxx._xxxx",
  "xxxx._xxxx:_*xxxx*@xxxxd",
  "xxxx.x",
  "xxxx.x>#xxxx",
  "xxxx.x>/*Xxxxx",
  "xxxx.x>/*xxxx",
  "xxxx.x>//#xxxx",
  "xxxx.x>//XXXX",
  "xxxx.x>//xxxx",
  "xxxx.xxx",
  "xxxx.xxx')xxxx",
  "xxxx.xxx()xxx",
  "xxxx.xxxXxxx(xxxx(x",
  "xxxx.xxxXxxxx",
  "xxxx.xxxXxxxx()$xxx.xxxx('.xxxx-xxxx')[xxxx.xxxx.xxxx",
  "xxxx.xxxXxxxx()xxx",
  "xxxx.xxxXxxxxXxxxx(xxxx",
  "xxxx.xxxx",
  "xxxx.xxxx(\"xxxx\").xxxx(\"x",
  "xxxx.xxxx(\"xxxx\").xxxx(xxxx(x",
  "xxxx.xxxx()$xxx.xxxx('.xxxx-xxxx')[xxxx.xxxx.xxxx",
  "xxxx.xxxx().xxx(xxxx(xxxx",
  "xxxx.xxxx()[-d].xxxx",
  "xxxx.xxxx()xxx",
  "xxxx.xxxx(xd.xxxx(xxxx[d]).xxxx(xxxx(xxx",
  "xxxx.xxxx(xxxx",
  "xxxx.xxxx(xxxx(x",
  "xxxx.xxxx(xxxx)xxxx",
  "xxxx.xxxx(xxxx.xxxx",
  "xxxx.xxxx).xxxx(\"x\").xxxx(\"xxxx",
  "xxxx.xxxx)xxxx",
  "xxxx.xxxx.xxxx",
  "xxxx.xxxx.xxxx).xxx('xxxx');xxxx.$xxxx.xxxx(x",
  "xxxx.xxxx.xxxx.xxxx",
  "xxxx.xxxx.xxxx.xxxx(xxxx",
  "xxxx.xxxx<dd?dd:dd)+\"xx\").xxxx(\"xxxx-xxxx\",\"xxxx\").xxxx(\"xxxx",
  "xxxx.xxxx<dd?xxxx[x]:x+d",
  "xxxx.xxxxXxx(\"xxxx\").xxxx(xxxx(x",
  "xxxx.xxxxXxxxx",
  "xxxx.xxxxXxxxx(xxxx",
  "xxxx.xxxxXxxxx(xxxx.xxxx",
  "xxxx.xxxx['xxxx']xx",
  "xxxx.\u00b7Xxxxx:\u00b7\"Xxxxx",
  "xxxx.\u00b7xxxx:\u00b7\"xxxx",
  "xxxx.\u2022*Xx",
  "xxxx.\u2022*xx",
  "xxxx.\u2022Xx",
  "xxxx.\u2022Xxxx",
  "xxxx.\u2022Xxxxx",
  "xxxx.\u2022xx",
  "xxxx.\u2022xxxx",
  "xxxx:\");xxxx(\"%x",
  "xxxx:\\x\");//xxxx",
  "xxxx:\\x\");//xxxx;xxxx",
  "xxxx:\\x\");//xxxx;}xxxx(xxxx);xxxx(\"\\x\\x\u00bfxxxx",
  "xxxx:\\x\");xxxx(xxxx()){xxxx",
  "xxxx:\\x\\x",
  "xxxx:\\x\\x\");xx{xxxx(\"d.-",
  "xxxx:xx",
  "xxxx:xxxx",
  "xxxx;xxx",
  "xxxx;xxxx",
  "xxxx;xxxx(\"Xxxxx",
  "xxxx;xxxx(\"\\xXxxxx",
  "xxxx;xxxx(\"\\xxxx",
  "xxxx;xxxx(\"xxxx",
  "xxxx;xxxx_d",
  "xxxx;xx{xxxx(\"\\x",
  "xxxx;xx{xxxx(xxxx);xxxx(xxxx()){xxxx",
  "xxxx;xx{xxxx(xxxx);xxxx(xxxxXxxxx()){xxxx",
  "xxxx;}xxx;/*xxxx",
  "xxxx;}xxxx",
  "xxxx;}xxxx;xxxx",
  "xxxx</xd",
  "xxxx</xxxx",
  "xxxx=\"/xxxx",
  "xxxx=\"Xxxxx",
  "xxxx=\"xxxx",
  "xxxx='Xx",
  "xxxx='Xxxxx",
  "xxxx='xx",
  "xxxx='xxxx",
  "xxxx=(X->xd",
  "xxxx=(X->xd*X->xd);xxxx;xxxx",
  "xxxx=(X->xd+X->xd);xxxx;xxxx",
  "xxxx=(X->xd-X->xd);xxxx;xxxx",
  "xxxx=(x->xd",
  "xxxx=(x->xd*x->xd);xxxx;xxxx",
  "xxxx=(x->xd+x->xd);xxxx;xxxx",
  "xxxx=(x->xd-x->xd);xxxx;xxxx",
  "xxxx=['XXXX'])xxx",
  "xxxx=['xxxx'])xxx",
  "xxxx=d;xxxx(\"\\x",
  "xxxx?\")\u2022Xx",
  "xxxx?\")\u2022xx",
  "xxxx?[dd/dd/dd",
  "xxxxXxx);xxxx",
  "xxxxXxx){xxxx",
  "xxxxXxxdX();/*Xxxxx",
  "xxxxXxxdX();xxx",
  "xxxxXxxdX(){xxx",
  "xxxxXxxdXXxxx();xxx",
  "xxxxXxxdXXxxx(){xxx",
  "xxxxXxxxx",
  "xxxxXxxxx();xxx",
  "xxxxXxxxx(){xxx",
  "xxxxXxxxx.xxx",
  "xxxxXxxxx.xxxx",
  "xxxxXxxxx;xxx",
  "xxxx[d].xxxXxxxxXxxxxXxxx",
  "xxxx[d].xxxx",
  "xxxx[dd/dd/dd",
  "xxxx\\x",
  "xxxx\\x\");xxxx",
  "xxxx\\x\");xxxx++;}xxxx->xxx",
  "xxxx\\x\");xxxx++;}xxxxX->xxx",
  "xxxx_d",
  "xxxx_d;[dd/dd/dd",
  "xxxx_d;xxxx(\"Xx",
  "xxxx_d;xxxx(\"xx",
  "xxxx_xXxxxx(dd)){xxxx(\"\\x",
  "xxxx_xXxxxx(xxxx",
  "xxxx_xxxx",
  "xxxx_xxxx('xxxx-xxxx.xxxx')@xxx.xxxx('/xxxx",
  "xxxx_xxxx('xxxx.xxxx",
  "xxxx_xxxx():xxx",
  "xxxx_xxxx():xxxx",
  "xxxx_xxxx(dd)){xxxx(\"\\x",
  "xxxx_xxxx(xxxx",
  "xxxx_xxxx).\u2022Xxxx",
  "xxxx_xxxx).\u2022xxxx",
  "xxxx_xxxx[x].xxx_xxxx",
  "xxxx_xxxx})xxxx",
  "xxxx_\u2022xxxx",
  "xxxxd.xxx",
  "xxxxd.xxx);xxxx(\"\\xXxxxx",
  "xxxxd.xxx);xxxx(\"\\xxxx",
  "xxxxd.xxxx);[dd/dd/dd",
  "xxxxd.xxxx);xxxx",
  "xxxxd.xxxx);xxxx(\"\\x\\x%x",
  "xxxxd.xxxx+d;xxxx",
  "xxxxd.xxxx;xxxx){xx(((xxxx%d==d",
  "xxxxd.xxxx==xxxxd.xxxx?d:ddd",
  "xxxxdx();/*xxxx",
  "xxxxdx();xxx",
  "xxxxdx(){xxx",
  "xxxxdx(Xxxxx",
  "xxxxdx(xxxx",
  "xxxxdxxxx();xxx",
  "xxxxdxxxx(){xxx",
  "xxxx{xxxx",
  "xxxx}Xxxxx.xxxx.xxxXxxxx",
  "xxxx}xxxx.xxxx.xxxx",
  "xxxx}xxxx{xxxx",
  "xxxx\u200e[dd/dd/dd",
  "xx{xxxx(\"d.-",
  "xx\u200e[dd/dd/dd",
  "x\u00b0",
  "x\ufe35x",
  "y",
  "y(d.y0",
  "y(d.y1",
  "y.",
  "y.domain([0",
  "y0",
  "y1",
  "yAxis",
  "ya",
  "yahir[07/09/22",
  "yan",
  "yaxis",
  "year_2",
  "year_2;[11/09/22",
  "yer",
  "yes",
  "yo",
  "yo[06/09/22",
  "yo[07/09/22",
  "yo[12/09/22",
  "yor",
  "you",
  "ype",
  "z",
  "z.",
  "zar",
  "zca",
  "zco",
  "zona",
  "zonas",
  "zos",
  "zzo",
  "{",
  "|",
  "|\");printf(\"\\n",
  "|\");xxxx(\"\\x",
  "|----------------------------------------------------------|\");printf(\"\\n\\n",
  "|----------------------------------------------------------|\");printf(\"\\n\\n\\t",
  "|------------------PROGRAMA",
  "|------------------programa",
  "|-----------------LISTAS",
  "|-----------------listas",
  "|----XXXX",
  "|----xxxx",
  "|----|\");xxxx(\"\\x\\x",
  "|----|\");xxxx(\"\\x\\x\\x",
  "|1",
  "|2",
  "|3",
  "|4",
  "|d",
  "||",
  "}",
  "\u00a0",
  "\u00ac",
  "\u00ac_\u00ac",
  "\u00af",
  "\u00af\\(x)/\u00af",
  "\u00af\\(\u30c4)/\u00af",
  "\u00b0",
  "\u00b0C",
  "\u00b0C.",
  "\u00b0F.",
  "\u00b0K.",
  "\u00b0X",
  "\u00b0X.",
  "\u00b0c",
  "\u00b0c.",
  "\u00b0f.",
  "\u00b0k.",
  "\u00b0x.",
  "\u00bf",
  "\u00c1",
  "\u00c1ngel[07/09/22",
  "\u00c1rea):\\n\");switch(menuGeo2DArea()){case",
  "\u00e1",
  "\u00e1g.",
  "\u00e1is",
  "\u00e1ngel[07/09/22",
  "\u00e1ngulo",
  "\u00e1rea):\\n\");switch(menugeo2darea()){case",
  "\u00e1rea)\\n",
  "\u00e1rea:\\n\\n\");do{printf(\"1.-",
  "\u00e4",
  "\u00e4.",
  "\u00e9",
  "\u00e9l",
  "\u00e9xito",
  "\u00e9xitos",
  "\u00eda.",
  "\u00edan",
  "\u00edas",
  "\u00f1iz",
  "\u00f1or",
  "\u00f1os",
  "\u00f1oz",
  "\u00f3lo",
  "\u00f3mo",
  "\u00f6",
  "\u00f6.",
  "\u00fam.",
  "\u00fc",
  "\u00fc.",
  "\u0ca0",
  "\u0ca0_\u0ca0",
  "\u0ca0\ufe35\u0ca0",
  "\u200d",
  "\u200e",
  "\u200e+52",
  "\u200e+dd",
  "\u200e2",
  "\u200eAhora",
  "\u200eLos",
  "\u200eMessages",
  "\u200eP\u00e9rez",
  "\u200eRaul",
  "\u200eXxx",
  "\u200eXxxx",
  "\u200eXxxxx",
  "\u200e[19/11/19",
  "\u200e[dd/dd/dd",
  "\u200eahora",
  "\u200eaudio",
  "\u200ed",
  "\u200edocumento",
  "\u200eimage",
  "\u200elos",
  "\u200emessages",
  "\u200ep\u00e9rez",
  "\u200eraul",
  "\u200esticker",
  "\u200exxx",
  "\u200exxxx",
  "\u200e\u202a+52",
  "\u200e\u202a+dd",
  "\u2014",
  "\u2019",
  "\u2019-(",
  "\u2019-)",
  "\u2019\u2019",
  "\u201c",
  "\u201d",
  "\u2022",
  "\u2022*a",
  "\u2022*b",
  "\u2022*c",
  "\u2022*d",
  "\u2022*e",
  "\u2022*f",
  "\u2022*g",
  "\u2022Si",
  "\u2022si",
  "\u2026",
  "\u202a",
  "\u202a+52",
  "\u202a+dd",
  "\u2501",
  "\u253b",
  "\u253b\u2501\u253b",
  "\u256f",
  "\u25a1",
  "\u2642",
  "\ufe35",
  "\uff09",
  "\ud83c\udf70",
  "\ud83c\udf7e",
  "\ud83c\udf81",
  "\ud83c\udf82",
  "\ud83c\udf89",
  "\ud83c\udf8a",
  "\ud83c\udfe1",
  "\ud83c\udffb",
  "\ud83c\udffb\u200e[06/01/18",
  "\ud83c\udffb\u200e[dd/dd/dd",
  "\ud83d\udc4d",
  "\ud83d\udca6",
  "\ud83d\ude02",
  "\ud83d\ude0a",
  "\ud83d\ude0c",
  "\ud83d\ude18",
  "\ud83d\ude1e",
  "\ud83d\ude37",
  "\ud83d\ude4b",
  "\ud83d\ude4f",
  "\ud83e\udd13",
  "\ud83e\udd23",
  "\ud83e\udd32",
  "\ud83e\uddf4"
]